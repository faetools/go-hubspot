# Code generated by devtool; DO NOT EDIT.
version: 2.1
orbs:
  tool: faetools/service-tool@0.0.9
executors:
  golang-dev:
    docker:
      - image: golang:1.17.2
commands:
  gh-client-install:
    description: Install GH CLI client
    parameters:
      GH_CLI_VERSION:
        type: string
        default: 1.11.0
    steps:
      - run:
          name: Generate Checksum
          command: |
            touch /tmp/cachechecksum.txt
            echo "<< parameters.GH_CLI_VERSION >>" > /tmp/cachechecksum.txt
      - restore_cache:
          keys:
            - ghclient-{{ arch }}-v1-{{ checksum "/tmp/cachechecksum.txt" }}
      - run:
          name: Setup
          working_directory: /tmp
          command: |
            if [ -d "/tmp/cache" ]
            then

              sudo cp /tmp/cache/ghclient/<< parameters.GH_CLI_VERSION >>/ghclient /usr/local/bin/gh
            else

              mkdir -p /tmp/cache/ghclient/<< parameters.GH_CLI_VERSION >>
              wget https://github.com/cli/cli/releases/download/v<< parameters.GH_CLI_VERSION >>/gh_<< parameters.GH_CLI_VERSION >>_linux_amd64.tar.gz -O /tmp/ghcli.tar.gz
              tar -xf /tmp/ghcli.tar.gz
              sudo mv /tmp/gh_<< parameters.GH_CLI_VERSION >>_linux_amd64/bin/gh /usr/local/bin/gh
              sudo cp /usr/local/bin/gh /tmp/cache/ghclient/<< parameters.GH_CLI_VERSION >>/ghclient
            fi
      - save_cache:
          key: ghclient-{{ arch }}-v1-{{ checksum "/tmp/cachechecksum.txt" }}
          paths:
            - /tmp/cache
jobs:
  test-unit:
    machine:
      image: ubuntu-2004:202104-01
    environment:
      GOPRIVATE: github.com/faetools/*
      GOFLAGS: -mod=vendor
      GOTESTSUM_VERSION: 1.6.4
      SONAR_SCANNER_VERSION: 4.6.1.2450
      GOLANGCI_LINT_VERSION: 1.43.0
    steps:
      - checkout
      - run:
          name: Generate Checksum
          command: |
            touch /tmp/cachechecksum.txt
            echo "$GOTESTSUM_VERSION-$SONAR_SCANNER_VERSION-$GOLANGCI_LINT_VERSION" > /tmp/cachechecksum.txt
      - restore_cache:
          keys:
            - unit-setup-{{ arch }}-v1-{{ checksum "/tmp/cachechecksum.txt" }}
      - run:
          name: Setup
          command: |
            sudo mkdir -p /usr/local/go_workspace/bin
            if [ -d "/tmp/cache" ]
            then

                echo "using cache";
                sudo cp /tmp/cache/gotestsum/${GOTESTSUM_VERSION}/gotestsum /usr/local/bin/gotestsum
                mkdir -p /tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux
                cp -r /tmp/cache/sonar-scanner/${SONAR_SCANNER_VERSION}/. /tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/.
                sudo cp /tmp/cache/golangci-lint/${GOLANGCI_LINT_VERSION}/golangci-lint /usr/local/go_workspace/bin/golangci-lint
            else

                echo "pulling from source";
                curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" | sudo tar -xz -C /usr/local/bin gotestsum
                wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip -P /tmp
                unzip /tmp/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip -d /tmp
                curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b /usr/local/go_workspace/bin v${GOLANGCI_LINT_VERSION}
                mkdir -p /tmp/cache/gotestsum/${GOTESTSUM_VERSION}
                mkdir -p /tmp/cache/sonar-scanner/${SONAR_SCANNER_VERSION}
                mkdir -p /tmp/cache/golangci-lint/${GOLANGCI_LINT_VERSION}
                cp /usr/local/bin/gotestsum /tmp/cache/gotestsum/${GOTESTSUM_VERSION}/gotestsum
                cp -r /tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/. /tmp/cache/sonar-scanner/${SONAR_SCANNER_VERSION}/.
                sudo cp /usr/local/go_workspace/bin/golangci-lint /tmp/cache/golangci-lint/${GOLANGCI_LINT_VERSION}/golangci-lint
            fi
            mkdir /tmp/test-results
            mkdir -p /tmp/artifacts
      - save_cache:
          key: unit-setup-{{ arch }}-v1-{{ checksum "/tmp/cachechecksum.txt" }}
          paths:
            - /tmp/cache
      - restore_cache:
          keys:
            - v2-golang-cache-{{ arch }}-{{ checksum "go.sum" }}
      - run:
          name: Go Test
          environment:
            CI: true
          command: |
            gotestsum --junitfile /tmp/test-results/unit-tests.xml ./... -race -coverprofile=coverage.out -coverpkg=./...
      - store_test_results:
          path: /tmp/test-results
      - run:
          name: Golangci Lint
          command: /usr/local/go_workspace/bin/golangci-lint run --out-format checkstyle --issues-exit-code=0 --timeout=5m0s > report.xml
      - store_artifacts:
          path: ~/project/report.xml
      - run:
          name: Code Coverage HTML
          working_directory: cmd/app
          command: go tool cover -html=../../coverage.out -o /tmp/artifacts/coverage.html
      - store_artifacts:
          path: /tmp/artifacts
      - save_cache:
          key: v2-golang-cache-{{ arch }}-{{ checksum "go.sum" }}
          paths:
            - ~/.cache/go-build
            - ~/.cache/golangci-lint
      - run:
          name: Check sonar cache
          command: |
            if [[ "$CIRCLE_BRANCH" != "master" ]] && [[ "$CIRCLE_BRANCH" != "main" ]] && [[ -z "$CIRCLE_PULL_REQUEST" ]]; then

              circleci-agent step halt
            fi
workflows:
  master:
    jobs:
      - test-unit:
          name: Unit Tests
          filters:
            branches:
              only:
                - master
  pr:
    jobs:
      - test-unit:
          name: Unit Tests
          context: code-analysis
          filters:
            branches:
              ignore:
                - master
                - main
