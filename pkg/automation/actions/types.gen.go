// Package actions provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/faetools/devtool version (devel) DO NOT EDIT.
package actions

import (
	"encoding/json"
	"fmt"
	"time"
)

const (
	Developer_hapikeyScopes = "developer_hapikey.Scopes"
	HapikeyScopes           = "hapikey.Scopes"
	Oauth2_legacyScopes     = "oauth2_legacy.Scopes"
)

// Defines values for ActionFunctionFunctionType.
const (
	ActionFunctionFunctionTypePOSTFETCHOPTIONS ActionFunctionFunctionType = "POST_FETCH_OPTIONS"

	ActionFunctionFunctionTypePREACTIONEXECUTION ActionFunctionFunctionType = "PRE_ACTION_EXECUTION"

	ActionFunctionFunctionTypePREFETCHOPTIONS ActionFunctionFunctionType = "PRE_FETCH_OPTIONS"
)

// Defines values for ActionFunctionIdentifierFunctionType.
const (
	ActionFunctionIdentifierFunctionTypePOSTFETCHOPTIONS ActionFunctionIdentifierFunctionType = "POST_FETCH_OPTIONS"

	ActionFunctionIdentifierFunctionTypePREACTIONEXECUTION ActionFunctionIdentifierFunctionType = "PRE_ACTION_EXECUTION"

	ActionFunctionIdentifierFunctionTypePREFETCHOPTIONS ActionFunctionIdentifierFunctionType = "PRE_FETCH_OPTIONS"
)

// Defines values for ConditionalSingleFieldDependencyDependencyType.
const (
	ConditionalSingleFieldDependencyDependencyTypeCONDITIONALSINGLEFIELD ConditionalSingleFieldDependencyDependencyType = "CONDITIONAL_SINGLE_FIELD"
)

// Defines values for FieldTypeDefinitionFieldType.
const (
	FieldTypeDefinitionFieldTypeBooleancheckbox FieldTypeDefinitionFieldType = "booleancheckbox"

	FieldTypeDefinitionFieldTypeCalculationEquation FieldTypeDefinitionFieldType = "calculation_equation"

	FieldTypeDefinitionFieldTypeCalculationReadTime FieldTypeDefinitionFieldType = "calculation_read_time"

	FieldTypeDefinitionFieldTypeCalculationRollup FieldTypeDefinitionFieldType = "calculation_rollup"

	FieldTypeDefinitionFieldTypeCalculationScore FieldTypeDefinitionFieldType = "calculation_score"

	FieldTypeDefinitionFieldTypeCheckbox FieldTypeDefinitionFieldType = "checkbox"

	FieldTypeDefinitionFieldTypeDate FieldTypeDefinitionFieldType = "date"

	FieldTypeDefinitionFieldTypeFile FieldTypeDefinitionFieldType = "file"

	FieldTypeDefinitionFieldTypeNumber FieldTypeDefinitionFieldType = "number"

	FieldTypeDefinitionFieldTypePhonenumber FieldTypeDefinitionFieldType = "phonenumber"

	FieldTypeDefinitionFieldTypeRadio FieldTypeDefinitionFieldType = "radio"

	FieldTypeDefinitionFieldTypeSelect FieldTypeDefinitionFieldType = "select"

	FieldTypeDefinitionFieldTypeText FieldTypeDefinitionFieldType = "text"

	FieldTypeDefinitionFieldTypeTextarea FieldTypeDefinitionFieldType = "textarea"

	FieldTypeDefinitionFieldTypeUnknown FieldTypeDefinitionFieldType = "unknown"
)

// Defines values for FieldTypeDefinitionReferencedObjectType.
const (
	FieldTypeDefinitionReferencedObjectTypeAD FieldTypeDefinitionReferencedObjectType = "AD"

	FieldTypeDefinitionReferencedObjectTypeADACCOUNT FieldTypeDefinitionReferencedObjectType = "AD_ACCOUNT"

	FieldTypeDefinitionReferencedObjectTypeADCAMPAIGN FieldTypeDefinitionReferencedObjectType = "AD_CAMPAIGN"

	FieldTypeDefinitionReferencedObjectTypeADGROUP FieldTypeDefinitionReferencedObjectType = "AD_GROUP"

	FieldTypeDefinitionReferencedObjectTypeATTRIBUTION FieldTypeDefinitionReferencedObjectType = "ATTRIBUTION"

	FieldTypeDefinitionReferencedObjectTypeAUTOMATIONPLATFORMFLOW FieldTypeDefinitionReferencedObjectType = "AUTOMATION_PLATFORM_FLOW"

	FieldTypeDefinitionReferencedObjectTypeBETALERT FieldTypeDefinitionReferencedObjectType = "BET_ALERT"

	FieldTypeDefinitionReferencedObjectTypeBETDELIVERABLESERVICE FieldTypeDefinitionReferencedObjectType = "BET_DELIVERABLE_SERVICE"

	FieldTypeDefinitionReferencedObjectTypeBLOGPOST FieldTypeDefinitionReferencedObjectType = "BLOG_POST"

	FieldTypeDefinitionReferencedObjectTypeCALL FieldTypeDefinitionReferencedObjectType = "CALL"

	FieldTypeDefinitionReferencedObjectTypeCAMPAIGN FieldTypeDefinitionReferencedObjectType = "CAMPAIGN"

	FieldTypeDefinitionReferencedObjectTypeCHATFLOW FieldTypeDefinitionReferencedObjectType = "CHATFLOW"

	FieldTypeDefinitionReferencedObjectTypeCOMMUNICATION FieldTypeDefinitionReferencedObjectType = "COMMUNICATION"

	FieldTypeDefinitionReferencedObjectTypeCOMPANY FieldTypeDefinitionReferencedObjectType = "COMPANY"

	FieldTypeDefinitionReferencedObjectTypeCONTACT FieldTypeDefinitionReferencedObjectType = "CONTACT"

	FieldTypeDefinitionReferencedObjectTypeCONTACTCREATEATTRIBUTION FieldTypeDefinitionReferencedObjectType = "CONTACT_CREATE_ATTRIBUTION"

	FieldTypeDefinitionReferencedObjectTypeCONTENT FieldTypeDefinitionReferencedObjectType = "CONTENT"

	FieldTypeDefinitionReferencedObjectTypeCONVERSATION FieldTypeDefinitionReferencedObjectType = "CONVERSATION"

	FieldTypeDefinitionReferencedObjectTypeCONVERSATIONINBOX FieldTypeDefinitionReferencedObjectType = "CONVERSATION_INBOX"

	FieldTypeDefinitionReferencedObjectTypeCONVERSATIONSESSION FieldTypeDefinitionReferencedObjectType = "CONVERSATION_SESSION"

	FieldTypeDefinitionReferencedObjectTypeCTA FieldTypeDefinitionReferencedObjectType = "CTA"

	FieldTypeDefinitionReferencedObjectTypeDEAL FieldTypeDefinitionReferencedObjectType = "DEAL"

	FieldTypeDefinitionReferencedObjectTypeEMAIL FieldTypeDefinitionReferencedObjectType = "EMAIL"

	FieldTypeDefinitionReferencedObjectTypeENGAGEMENT FieldTypeDefinitionReferencedObjectType = "ENGAGEMENT"

	FieldTypeDefinitionReferencedObjectTypeEXPORT FieldTypeDefinitionReferencedObjectType = "EXPORT"

	FieldTypeDefinitionReferencedObjectTypeFEEDBACKSUBMISSION FieldTypeDefinitionReferencedObjectType = "FEEDBACK_SUBMISSION"

	FieldTypeDefinitionReferencedObjectTypeFORECAST FieldTypeDefinitionReferencedObjectType = "FORECAST"

	FieldTypeDefinitionReferencedObjectTypeFORM FieldTypeDefinitionReferencedObjectType = "FORM"

	FieldTypeDefinitionReferencedObjectTypeFORMSUBMISSIONINBOUNDDB FieldTypeDefinitionReferencedObjectType = "FORM_SUBMISSION_INBOUNDDB"

	FieldTypeDefinitionReferencedObjectTypeHUB FieldTypeDefinitionReferencedObjectType = "HUB"

	FieldTypeDefinitionReferencedObjectTypeIMPORT FieldTypeDefinitionReferencedObjectType = "IMPORT"

	FieldTypeDefinitionReferencedObjectTypeINVOICE FieldTypeDefinitionReferencedObjectType = "INVOICE"

	FieldTypeDefinitionReferencedObjectTypeKEYWORD FieldTypeDefinitionReferencedObjectType = "KEYWORD"

	FieldTypeDefinitionReferencedObjectTypeLANDINGPAGE FieldTypeDefinitionReferencedObjectType = "LANDING_PAGE"

	FieldTypeDefinitionReferencedObjectTypeLINEITEM FieldTypeDefinitionReferencedObjectType = "LINE_ITEM"

	FieldTypeDefinitionReferencedObjectTypeMARKETINGEMAIL FieldTypeDefinitionReferencedObjectType = "MARKETING_EMAIL"

	FieldTypeDefinitionReferencedObjectTypeMARKETINGEVENT FieldTypeDefinitionReferencedObjectType = "MARKETING_EVENT"

	FieldTypeDefinitionReferencedObjectTypeMEDIABRIDGE FieldTypeDefinitionReferencedObjectType = "MEDIA_BRIDGE"

	FieldTypeDefinitionReferencedObjectTypeMEETINGEVENT FieldTypeDefinitionReferencedObjectType = "MEETING_EVENT"

	FieldTypeDefinitionReferencedObjectTypeNOTE FieldTypeDefinitionReferencedObjectType = "NOTE"

	FieldTypeDefinitionReferencedObjectTypeOBJECTLIST FieldTypeDefinitionReferencedObjectType = "OBJECT_LIST"

	FieldTypeDefinitionReferencedObjectTypeOWNER FieldTypeDefinitionReferencedObjectType = "OWNER"

	FieldTypeDefinitionReferencedObjectTypePORTAL FieldTypeDefinitionReferencedObjectType = "PORTAL"

	FieldTypeDefinitionReferencedObjectTypePRODUCT FieldTypeDefinitionReferencedObjectType = "PRODUCT"

	FieldTypeDefinitionReferencedObjectTypePRODUCTORFOLDER FieldTypeDefinitionReferencedObjectType = "PRODUCT_OR_FOLDER"

	FieldTypeDefinitionReferencedObjectTypePUBLISHINGTASK FieldTypeDefinitionReferencedObjectType = "PUBLISHING_TASK"

	FieldTypeDefinitionReferencedObjectTypeQUOTA FieldTypeDefinitionReferencedObjectType = "QUOTA"

	FieldTypeDefinitionReferencedObjectTypeQUOTE FieldTypeDefinitionReferencedObjectType = "QUOTE"

	FieldTypeDefinitionReferencedObjectTypeRESTORABLECRMOBJECT FieldTypeDefinitionReferencedObjectType = "RESTORABLE_CRM_OBJECT"

	FieldTypeDefinitionReferencedObjectTypeSALESFORCESYNCERROR FieldTypeDefinitionReferencedObjectType = "SALESFORCE_SYNC_ERROR"

	FieldTypeDefinitionReferencedObjectTypeSEQUENCE FieldTypeDefinitionReferencedObjectType = "SEQUENCE"

	FieldTypeDefinitionReferencedObjectTypeSEQUENCESTEP FieldTypeDefinitionReferencedObjectType = "SEQUENCE_STEP"

	FieldTypeDefinitionReferencedObjectTypeSITEPAGE FieldTypeDefinitionReferencedObjectType = "SITE_PAGE"

	FieldTypeDefinitionReferencedObjectTypeSNIPPET FieldTypeDefinitionReferencedObjectType = "SNIPPET"

	FieldTypeDefinitionReferencedObjectTypeSOCIALCHANNEL FieldTypeDefinitionReferencedObjectType = "SOCIAL_CHANNEL"

	FieldTypeDefinitionReferencedObjectTypeSOCIALPOST FieldTypeDefinitionReferencedObjectType = "SOCIAL_POST"

	FieldTypeDefinitionReferencedObjectTypeTASK FieldTypeDefinitionReferencedObjectType = "TASK"

	FieldTypeDefinitionReferencedObjectTypeTASKTEMPLATE FieldTypeDefinitionReferencedObjectType = "TASK_TEMPLATE"

	FieldTypeDefinitionReferencedObjectTypeTEMPLATE FieldTypeDefinitionReferencedObjectType = "TEMPLATE"

	FieldTypeDefinitionReferencedObjectTypeTICKET FieldTypeDefinitionReferencedObjectType = "TICKET"

	FieldTypeDefinitionReferencedObjectTypeUNKNOWN FieldTypeDefinitionReferencedObjectType = "UNKNOWN"

	FieldTypeDefinitionReferencedObjectTypeUNSUBSCRIBE FieldTypeDefinitionReferencedObjectType = "UNSUBSCRIBE"
)

// Defines values for FieldTypeDefinitionType.
const (
	FieldTypeDefinitionTypeBool FieldTypeDefinitionType = "bool"

	FieldTypeDefinitionTypeCurrencyNumber FieldTypeDefinitionType = "currency_number"

	FieldTypeDefinitionTypeDate FieldTypeDefinitionType = "date"

	FieldTypeDefinitionTypeDatetime FieldTypeDefinitionType = "datetime"

	FieldTypeDefinitionTypeEnumeration FieldTypeDefinitionType = "enumeration"

	FieldTypeDefinitionTypeJson FieldTypeDefinitionType = "json"

	FieldTypeDefinitionTypeNumber FieldTypeDefinitionType = "number"

	FieldTypeDefinitionTypeObjectCoordinates FieldTypeDefinitionType = "object_coordinates"

	FieldTypeDefinitionTypePhoneNumber FieldTypeDefinitionType = "phone_number"

	FieldTypeDefinitionTypeString FieldTypeDefinitionType = "string"
)

// Defines values for InputFieldDefinitionSupportedValueTypes.
const (
	InputFieldDefinitionSupportedValueTypesFIELDDATA InputFieldDefinitionSupportedValueTypes = "FIELD_DATA"

	InputFieldDefinitionSupportedValueTypesOBJECTPROPERTY InputFieldDefinitionSupportedValueTypes = "OBJECT_PROPERTY"

	InputFieldDefinitionSupportedValueTypesSTATICVALUE InputFieldDefinitionSupportedValueTypes = "STATIC_VALUE"
)

// Defines values for SingleFieldDependencyDependencyType.
const (
	SingleFieldDependencyDependencyTypeSINGLEFIELD SingleFieldDependencyDependencyType = "SINGLE_FIELD"
)

// A serverless function associated with this custom workflow action.
type ActionFunction struct {
	// The function source code.
	FunctionSource string `json:"functionSource"`

	// The type of function. This determines when the function will be called.
	FunctionType ActionFunctionFunctionType `json:"functionType"`

	// The ID qualifier for the function. This is used to specify which input field a function is associated with for `PRE_FETCH_OPTIONS` and `POST_FETCH_OPTIONS` function types.
	Id *string `json:"id,omitempty"`
}

// The type of function. This determines when the function will be called.
type ActionFunctionFunctionType string

// A serverless function associated with this custom workflow action.
type ActionFunctionIdentifier struct {
	// The type of function. This determines when the function will be called.
	FunctionType ActionFunctionIdentifierFunctionType `json:"functionType"`

	// The ID qualifier for the function. This is used to specify which input field a function is associated with for `PRE_FETCH_OPTIONS` and `POST_FETCH_OPTIONS` function types.
	Id *string `json:"id,omitempty"`
}

// The type of function. This determines when the function will be called.
type ActionFunctionIdentifierFunctionType string

// User-facing labels for this custom workflow action.
type ActionLabels struct {
	// The label to be displayed in the action card of the workflow editor once this custom action has been added to a workflow.
	ActionCardContent *string `json:"actionCardContent,omitempty"`

	// A description for this custom action. This will show up in the action editor along with the input fields.
	ActionDescription *string `json:"actionDescription,omitempty"`

	// The name of this custom action. This is what will show up when users are selecting an action in the workflows app.
	ActionName string `json:"actionName"`

	// The name to be displayed at the top of the action editor in the workflows app.
	AppDisplayName *string `json:"appDisplayName,omitempty"`

	// A map of input field names to descriptions for the fields. These will show up as tooltips when users are editing your action.
	InputFieldDescriptions *ActionLabels_InputFieldDescriptions `json:"inputFieldDescriptions,omitempty"`

	// A map of input field names to the user-facing labels.
	InputFieldLabels *ActionLabels_InputFieldLabels `json:"inputFieldLabels,omitempty"`
}

// A map of input field names to descriptions for the fields. These will show up as tooltips when users are editing your action.
type ActionLabels_InputFieldDescriptions struct {
	AdditionalProperties map[string]string `json:"-"`
}

// A map of input field names to the user-facing labels.
type ActionLabels_InputFieldLabels struct {
	AdditionalProperties map[string]string `json:"-"`
}

// A revision of this custom action.
type ActionRevision struct {
	// The date the revision was created.
	CreatedAt time.Time `json:"createdAt"`

	// Configuration for custom workflow action.
	Definition ExtensionActionDefinition `json:"definition"`
	Id         string                    `json:"id"`

	// The version number of the custom action.
	RevisionId string `json:"revisionId"`
}

// BatchInputCallbackCompletionBatchRequest defines model for BatchInputCallbackCompletionBatchRequest.
type BatchInputCallbackCompletionBatchRequest struct {
	Inputs []CallbackCompletionBatchRequest `json:"inputs"`
}

// Any information to send back to Workflows when completing an action callback as part of a batch request.
type CallbackCompletionBatchRequest struct {
	// The ID of the callback to complete.
	CallbackId string `json:"callbackId"`

	// A map of action output names and values.
	OutputFields CallbackCompletionBatchRequest_OutputFields `json:"outputFields"`
}

// A map of action output names and values.
type CallbackCompletionBatchRequest_OutputFields struct {
	AdditionalProperties map[string]string `json:"-"`
}

// Any information to send back to Workflows when completing an action callback.
type CallbackCompletionRequest struct {
	// A map of action output names and values.
	OutputFields CallbackCompletionRequest_OutputFields `json:"outputFields"`
}

// A map of action output names and values.
type CallbackCompletionRequest_OutputFields struct {
	AdditionalProperties map[string]string `json:"-"`
}

// CollectionResponseActionFunctionIdentifierNoPaging defines model for CollectionResponseActionFunctionIdentifierNoPaging.
type CollectionResponseActionFunctionIdentifierNoPaging struct {
	Results []ActionFunctionIdentifier `json:"results"`
}

// CollectionResponseActionRevisionForwardPaging defines model for CollectionResponseActionRevisionForwardPaging.
type CollectionResponseActionRevisionForwardPaging struct {
	Paging  *ForwardPaging   `json:"paging,omitempty"`
	Results []ActionRevision `json:"results"`
}

// CollectionResponseExtensionActionDefinitionForwardPaging defines model for CollectionResponseExtensionActionDefinitionForwardPaging.
type CollectionResponseExtensionActionDefinitionForwardPaging struct {
	Paging  *ForwardPaging              `json:"paging,omitempty"`
	Results []ExtensionActionDefinition `json:"results"`
}

// ConditionalSingleFieldDependency defines model for ConditionalSingleFieldDependency.
type ConditionalSingleFieldDependency struct {
	ControllingFieldName  string                                         `json:"controllingFieldName"`
	ControllingFieldValue string                                         `json:"controllingFieldValue"`
	DependencyType        ConditionalSingleFieldDependencyDependencyType `json:"dependencyType"`
	DependentFieldNames   []string                                       `json:"dependentFieldNames"`
}

// ConditionalSingleFieldDependencyDependencyType defines model for ConditionalSingleFieldDependency.DependencyType.
type ConditionalSingleFieldDependencyDependencyType string

// Error defines model for Error.
type Error struct {
	// The error category
	Category string `json:"category"`

	// Context about the error condition
	Context *Error_Context `json:"context,omitempty"`

	// A unique identifier for the request. Include this value with any error reports or support tickets
	CorrelationId string `json:"correlationId"`

	// further information about the error
	Errors *[]ErrorDetail `json:"errors,omitempty"`

	// A map of link names to associated URIs containing documentation about the error or recommended remediation steps
	Links *Error_Links `json:"links,omitempty"`

	// A human readable message describing the error along with remediation steps where appropriate
	Message string `json:"message"`

	// A specific category that contains more specific detail about the error
	SubCategory *string `json:"subCategory,omitempty"`
}

// Context about the error condition
type Error_Context struct {
	AdditionalProperties map[string][]string `json:"-"`
}

// A map of link names to associated URIs containing documentation about the error or recommended remediation steps
type Error_Links struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ErrorDetail defines model for ErrorDetail.
type ErrorDetail struct {
	// The status code associated with the error detail
	Code *string `json:"code,omitempty"`

	// Context about the error condition
	Context *ErrorDetail_Context `json:"context,omitempty"`

	// The name of the field or parameter in which the error was found.
	In *string `json:"in,omitempty"`

	// A human readable message describing the error along with remediation steps where appropriate
	Message string `json:"message"`

	// A specific category that contains more specific detail about the error
	SubCategory *string `json:"subCategory,omitempty"`
}

// Context about the error condition
type ErrorDetail_Context struct {
	AdditionalProperties map[string][]string `json:"-"`
}

// Configuration for custom workflow action.
type ExtensionActionDefinition struct {
	// The URL that will accept an HTTPS request each time workflows executes the custom action.
	ActionUrl string `json:"actionUrl"`

	// The date that this custom action was archived, if the custom action is archived.
	ArchivedAt *int64 `json:"archivedAt,omitempty"`

	// A list of functions associated with the custom workflow action.
	Functions []ActionFunctionIdentifier `json:"functions"`

	// The ID of the custom action.
	Id string `json:"id"`

	// A list of dependencies between the input fields. These configure when the input fields should be visible.
	InputFieldDependencies *[]interface{} `json:"inputFieldDependencies,omitempty"`

	// The list of input fields to display in this custom action.
	InputFields []InputFieldDefinition `json:"inputFields"`

	// The user-facing labels for the custom action.
	Labels ExtensionActionDefinition_Labels `json:"labels"`

	// Configures what properties of the enrolled CRM object are included in the action execution request
	ObjectRequestOptions *ObjectRequestOptions `json:"objectRequestOptions,omitempty"`

	// The object types that this custom action supports.
	ObjectTypes []string `json:"objectTypes"`

	// Whether this custom action is published to customers.
	Published  bool   `json:"published"`
	RevisionId string `json:"revisionId"`
}

// The user-facing labels for the custom action.
type ExtensionActionDefinition_Labels struct {
	AdditionalProperties map[string]ActionLabels `json:"-"`
}

// State of custom workflow action to be created.
type ExtensionActionDefinitionInput struct {
	// The URL that will accept an HTTPS request each time workflows executes the custom action.
	ActionUrl string `json:"actionUrl"`

	// The date that this custom action was archived, if the custom action is archived.
	ArchivedAt *int64 `json:"archivedAt,omitempty"`

	// A list of functions associated with the custom workflow action.
	Functions []ActionFunction `json:"functions"`

	// A list of dependencies between the input fields. These configure when the input fields should be visible.
	InputFieldDependencies *[]interface{} `json:"inputFieldDependencies,omitempty"`

	// The list of input fields to display in this custom action.
	InputFields []InputFieldDefinition `json:"inputFields"`

	// The user-facing labels for the custom action.
	Labels ExtensionActionDefinitionInput_Labels `json:"labels"`

	// Configures what properties of the enrolled CRM object are included in the action execution request
	ObjectRequestOptions *ObjectRequestOptions `json:"objectRequestOptions,omitempty"`

	// The object types that this custom action supports.
	ObjectTypes []string `json:"objectTypes"`

	// Whether this custom action is published to customers.
	Published bool `json:"published"`
}

// The user-facing labels for the custom action.
type ExtensionActionDefinitionInput_Labels struct {
	AdditionalProperties map[string]ActionLabels `json:"-"`
}

// Fields on custom workflow action to be updated.
type ExtensionActionDefinitionPatch struct {
	// The URL that will accept an HTTPS request each time workflows executes the custom action.
	ActionUrl *string `json:"actionUrl,omitempty"`

	// A list of dependencies between the input fields. These configure when the input fields should be visible.
	InputFieldDependencies *[]interface{} `json:"inputFieldDependencies,omitempty"`

	// The list of input fields to display in this custom action.
	InputFields *[]InputFieldDefinition `json:"inputFields,omitempty"`

	// The user-facing labels for the custom action.
	Labels *ExtensionActionDefinitionPatch_Labels `json:"labels,omitempty"`

	// Configures what properties of the enrolled CRM object are included in the action execution request
	ObjectRequestOptions *ObjectRequestOptions `json:"objectRequestOptions,omitempty"`

	// The object types that this custom action supports.
	ObjectTypes *[]string `json:"objectTypes,omitempty"`

	// Whether this custom action is published to customers.
	Published *bool `json:"published,omitempty"`
}

// The user-facing labels for the custom action.
type ExtensionActionDefinitionPatch_Labels struct {
	AdditionalProperties map[string]ActionLabels `json:"-"`
}

// The data type expected by an input field.
type FieldTypeDefinition struct {
	// Controls how the field appears in HubSpot.
	FieldType *FieldTypeDefinitionFieldType `json:"fieldType,omitempty"`

	// The input field name.
	Name string `json:"name"`

	// A list of valid options for the field value.
	Options []Option `json:"options"`

	// A URL that will accept HTTPS requests when the valid options for the field are fetched.
	OptionsUrl *string `json:"optionsUrl,omitempty"`

	// This can be set to `OWNER` if the field should contain a HubSpot owner value.
	ReferencedObjectType *FieldTypeDefinitionReferencedObjectType `json:"referencedObjectType,omitempty"`

	// The data type of the field.
	Type FieldTypeDefinitionType `json:"type"`
}

// Controls how the field appears in HubSpot.
type FieldTypeDefinitionFieldType string

// This can be set to `OWNER` if the field should contain a HubSpot owner value.
type FieldTypeDefinitionReferencedObjectType string

// The data type of the field.
type FieldTypeDefinitionType string

// ForwardPaging defines model for ForwardPaging.
type ForwardPaging struct {
	Next *NextPage `json:"next,omitempty"`
}

// Configuration for an input field on the custom action
type InputFieldDefinition struct {
	// Whether the field is required for the custom action to be valid
	IsRequired bool `json:"isRequired"`

	// Controls what kind of input a customer can use to specify the field value. Must contain exactly one of `STATIC_VALUE` or `OBJECT_PROPERTY`. If `STATIC_VALUE`, the customer will be able to choose a value when configuring the custom action; if `OBJECT_PROPERTY`, the customer will be able to choose a property from the enrolled workflow object that the field value will be copied from. In the future we may support more than one input control type here.
	SupportedValueTypes *[]InputFieldDefinitionSupportedValueTypes `json:"supportedValueTypes,omitempty"`

	// The data type expected by an input field.
	TypeDefinition FieldTypeDefinition `json:"typeDefinition"`
}

// InputFieldDefinitionSupportedValueTypes defines model for InputFieldDefinition.SupportedValueTypes.
type InputFieldDefinitionSupportedValueTypes string

// NextPage defines model for NextPage.
type NextPage struct {
	After string  `json:"after"`
	Link  *string `json:"link,omitempty"`
}

// Configures what properties of the enrolled CRM object are included in the action execution request
type ObjectRequestOptions struct {
	// A list of properties of the CRM object to include with the request to the `actionUrl`.
	Properties []string `json:"properties"`
}

// An option for a field value.
type Option struct {
	Description  string  `json:"description"`
	DisplayOrder int32   `json:"displayOrder"`
	DoubleData   float32 `json:"doubleData"`
	Hidden       bool    `json:"hidden"`

	// The user-facing label for the option.
	Label    string `json:"label"`
	ReadOnly bool   `json:"readOnly"`

	// The internal value for the option. This is what will be included in the execution request to the `actionUrl`.
	Value string `json:"value"`
}

// SingleFieldDependency defines model for SingleFieldDependency.
type SingleFieldDependency struct {
	ControllingFieldName string                              `json:"controllingFieldName"`
	DependencyType       SingleFieldDependencyDependencyType `json:"dependencyType"`
	DependentFieldNames  []string                            `json:"dependentFieldNames"`
}

// SingleFieldDependencyDependencyType defines model for SingleFieldDependency.DependencyType.
type SingleFieldDependencyDependencyType string

// CompleteBatchJSONBody defines parameters for CompleteBatch.
type CompleteBatchJSONBody BatchInputCallbackCompletionBatchRequest

// CompleteCallbackJSONBody defines parameters for CompleteCallback.
type CompleteCallbackJSONBody CallbackCompletionRequest

// ListAppParams defines parameters for ListApp.
type ListAppParams struct {
	// Maximum number of results per page.
	Limit *int32 `json:"limit,omitempty"`

	// The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.
	After *string `json:"after,omitempty"`

	// Whether to include archived custom actions.
	Archived *bool `json:"archived,omitempty"`
}

// CreateAppJSONBody defines parameters for CreateApp.
type CreateAppJSONBody ExtensionActionDefinitionInput

// GetDefinitionParams defines parameters for GetDefinition.
type GetDefinitionParams struct {
	// Whether to include archived custom actions.
	Archived *bool `json:"archived,omitempty"`
}

// UpdateDefinitionJSONBody defines parameters for UpdateDefinition.
type UpdateDefinitionJSONBody ExtensionActionDefinitionPatch

// ArchiveByFunctionTypeParamsFunctionType defines parameters for ArchiveByFunctionType.
type ArchiveByFunctionTypeParamsFunctionType string

// GetByFunctionTypeParamsFunctionType defines parameters for GetByFunctionType.
type GetByFunctionTypeParamsFunctionType string

// CreateOrReplaceByFunctionTypeParamsFunctionType defines parameters for CreateOrReplaceByFunctionType.
type CreateOrReplaceByFunctionTypeParamsFunctionType string

// ArchiveFunctionParamsFunctionType defines parameters for ArchiveFunction.
type ArchiveFunctionParamsFunctionType string

// GetFunctionParamsFunctionType defines parameters for GetFunction.
type GetFunctionParamsFunctionType string

// CreateOrReplaceFunctionParamsFunctionType defines parameters for CreateOrReplaceFunction.
type CreateOrReplaceFunctionParamsFunctionType string

// ListRevisionsParams defines parameters for ListRevisions.
type ListRevisionsParams struct {
	// Maximum number of results per page.
	Limit *int32 `json:"limit,omitempty"`

	// The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.
	After *string `json:"after,omitempty"`
}

// CompleteBatchJSONRequestBody defines body for CompleteBatch for application/json ContentType.
type CompleteBatchJSONRequestBody CompleteBatchJSONBody

// CompleteCallbackJSONRequestBody defines body for CompleteCallback for application/json ContentType.
type CompleteCallbackJSONRequestBody CompleteCallbackJSONBody

// CreateAppJSONRequestBody defines body for CreateApp for application/json ContentType.
type CreateAppJSONRequestBody CreateAppJSONBody

// UpdateDefinitionJSONRequestBody defines body for UpdateDefinition for application/json ContentType.
type UpdateDefinitionJSONRequestBody UpdateDefinitionJSONBody

// Getter for additional properties for ActionLabels_InputFieldDescriptions. Returns the specified
// element and whether it was found
func (a ActionLabels_InputFieldDescriptions) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ActionLabels_InputFieldDescriptions
func (a *ActionLabels_InputFieldDescriptions) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ActionLabels_InputFieldDescriptions to handle AdditionalProperties
func (a *ActionLabels_InputFieldDescriptions) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ActionLabels_InputFieldDescriptions to handle AdditionalProperties
func (a ActionLabels_InputFieldDescriptions) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ActionLabels_InputFieldLabels. Returns the specified
// element and whether it was found
func (a ActionLabels_InputFieldLabels) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ActionLabels_InputFieldLabels
func (a *ActionLabels_InputFieldLabels) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ActionLabels_InputFieldLabels to handle AdditionalProperties
func (a *ActionLabels_InputFieldLabels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ActionLabels_InputFieldLabels to handle AdditionalProperties
func (a ActionLabels_InputFieldLabels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for CallbackCompletionBatchRequest_OutputFields. Returns the specified
// element and whether it was found
func (a CallbackCompletionBatchRequest_OutputFields) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for CallbackCompletionBatchRequest_OutputFields
func (a *CallbackCompletionBatchRequest_OutputFields) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for CallbackCompletionBatchRequest_OutputFields to handle AdditionalProperties
func (a *CallbackCompletionBatchRequest_OutputFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for CallbackCompletionBatchRequest_OutputFields to handle AdditionalProperties
func (a CallbackCompletionBatchRequest_OutputFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for CallbackCompletionRequest_OutputFields. Returns the specified
// element and whether it was found
func (a CallbackCompletionRequest_OutputFields) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for CallbackCompletionRequest_OutputFields
func (a *CallbackCompletionRequest_OutputFields) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for CallbackCompletionRequest_OutputFields to handle AdditionalProperties
func (a *CallbackCompletionRequest_OutputFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for CallbackCompletionRequest_OutputFields to handle AdditionalProperties
func (a CallbackCompletionRequest_OutputFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Error_Context. Returns the specified
// element and whether it was found
func (a Error_Context) Get(fieldName string) (value []string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Error_Context
func (a *Error_Context) Set(fieldName string, value []string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string][]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Error_Context to handle AdditionalProperties
func (a *Error_Context) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string][]string)
		for fieldName, fieldBuf := range object {
			var fieldVal []string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Error_Context to handle AdditionalProperties
func (a Error_Context) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Error_Links. Returns the specified
// element and whether it was found
func (a Error_Links) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Error_Links
func (a *Error_Links) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Error_Links to handle AdditionalProperties
func (a *Error_Links) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Error_Links to handle AdditionalProperties
func (a Error_Links) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ErrorDetail_Context. Returns the specified
// element and whether it was found
func (a ErrorDetail_Context) Get(fieldName string) (value []string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ErrorDetail_Context
func (a *ErrorDetail_Context) Set(fieldName string, value []string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string][]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ErrorDetail_Context to handle AdditionalProperties
func (a *ErrorDetail_Context) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string][]string)
		for fieldName, fieldBuf := range object {
			var fieldVal []string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ErrorDetail_Context to handle AdditionalProperties
func (a ErrorDetail_Context) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExtensionActionDefinition_Labels. Returns the specified
// element and whether it was found
func (a ExtensionActionDefinition_Labels) Get(fieldName string) (value ActionLabels, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExtensionActionDefinition_Labels
func (a *ExtensionActionDefinition_Labels) Set(fieldName string, value ActionLabels) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]ActionLabels)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExtensionActionDefinition_Labels to handle AdditionalProperties
func (a *ExtensionActionDefinition_Labels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]ActionLabels)
		for fieldName, fieldBuf := range object {
			var fieldVal ActionLabels
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExtensionActionDefinition_Labels to handle AdditionalProperties
func (a ExtensionActionDefinition_Labels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExtensionActionDefinitionInput_Labels. Returns the specified
// element and whether it was found
func (a ExtensionActionDefinitionInput_Labels) Get(fieldName string) (value ActionLabels, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExtensionActionDefinitionInput_Labels
func (a *ExtensionActionDefinitionInput_Labels) Set(fieldName string, value ActionLabels) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]ActionLabels)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExtensionActionDefinitionInput_Labels to handle AdditionalProperties
func (a *ExtensionActionDefinitionInput_Labels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]ActionLabels)
		for fieldName, fieldBuf := range object {
			var fieldVal ActionLabels
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExtensionActionDefinitionInput_Labels to handle AdditionalProperties
func (a ExtensionActionDefinitionInput_Labels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExtensionActionDefinitionPatch_Labels. Returns the specified
// element and whether it was found
func (a ExtensionActionDefinitionPatch_Labels) Get(fieldName string) (value ActionLabels, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExtensionActionDefinitionPatch_Labels
func (a *ExtensionActionDefinitionPatch_Labels) Set(fieldName string, value ActionLabels) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]ActionLabels)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExtensionActionDefinitionPatch_Labels to handle AdditionalProperties
func (a *ExtensionActionDefinitionPatch_Labels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]ActionLabels)
		for fieldName, fieldBuf := range object {
			var fieldVal ActionLabels
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExtensionActionDefinitionPatch_Labels to handle AdditionalProperties
func (a ExtensionActionDefinitionPatch_Labels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
