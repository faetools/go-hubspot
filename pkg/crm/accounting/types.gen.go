// Package accounting provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/faetools/devtool version (devel) DO NOT EDIT.
package accounting

import (
	"encoding/json"
	"fmt"
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	HapikeyScopes       = "hapikey.Scopes"
	Oauth2_legacyScopes = "oauth2_legacy.Scopes"
)

// Defines values for AccountingExtensionInvoiceStatus.
const (
	AccountingExtensionInvoiceStatusCLOSED AccountingExtensionInvoiceStatus = "CLOSED"

	AccountingExtensionInvoiceStatusCREATED AccountingExtensionInvoiceStatus = "CREATED"

	AccountingExtensionInvoiceStatusOVERDUE AccountingExtensionInvoiceStatus = "OVERDUE"

	AccountingExtensionInvoiceStatusPAID AccountingExtensionInvoiceStatus = "PAID"

	AccountingExtensionInvoiceStatusSENT AccountingExtensionInvoiceStatus = "SENT"

	AccountingExtensionInvoiceStatusVOIDED AccountingExtensionInvoiceStatus = "VOIDED"
)

// Defines values for ActionResponseStatus.
const (
	ActionResponseStatusCANCELED ActionResponseStatus = "CANCELED"

	ActionResponseStatusCOMPLETE ActionResponseStatus = "COMPLETE"

	ActionResponseStatusPENDING ActionResponseStatus = "PENDING"

	ActionResponseStatusPROCESSING ActionResponseStatus = "PROCESSING"
)

// Defines values for CustomerSearchResponseExternalResult.
const (
	CustomerSearchResponseExternalResultERR CustomerSearchResponseExternalResult = "ERR"

	CustomerSearchResponseExternalResultOK CustomerSearchResponseExternalResult = "OK"
)

// Defines values for ExchangeRateResponseResult.
const (
	ExchangeRateResponseResultERR ExchangeRateResponseResult = "ERR"

	ExchangeRateResponseResultOK ExchangeRateResponseResult = "OK"
)

// Defines values for InvoicePdfResponseResult.
const (
	InvoicePdfResponseResultERR InvoicePdfResponseResult = "ERR"

	InvoicePdfResponseResultOK InvoicePdfResponseResult = "OK"
)

// Defines values for InvoiceReadResponseInvoiceStatus.
const (
	InvoiceReadResponseInvoiceStatusCLOSED InvoiceReadResponseInvoiceStatus = "CLOSED"

	InvoiceReadResponseInvoiceStatusCREATED InvoiceReadResponseInvoiceStatus = "CREATED"

	InvoiceReadResponseInvoiceStatusNONE InvoiceReadResponseInvoiceStatus = "NONE"

	InvoiceReadResponseInvoiceStatusOVERDUE InvoiceReadResponseInvoiceStatus = "OVERDUE"

	InvoiceReadResponseInvoiceStatusPAID InvoiceReadResponseInvoiceStatus = "PAID"

	InvoiceReadResponseInvoiceStatusSENT InvoiceReadResponseInvoiceStatus = "SENT"

	InvoiceReadResponseInvoiceStatusUNPAID InvoiceReadResponseInvoiceStatus = "UNPAID"

	InvoiceReadResponseInvoiceStatusVOIDED InvoiceReadResponseInvoiceStatus = "VOIDED"
)

// Defines values for InvoiceSearchResponseResult.
const (
	InvoiceSearchResponseResultERR InvoiceSearchResponseResult = "ERR"

	InvoiceSearchResponseResultOK InvoiceSearchResponseResult = "OK"
)

// Defines values for InvoiceUpdateResponseInvoiceStatus.
const (
	InvoiceUpdateResponseInvoiceStatusCLOSED InvoiceUpdateResponseInvoiceStatus = "CLOSED"

	InvoiceUpdateResponseInvoiceStatusCREATED InvoiceUpdateResponseInvoiceStatus = "CREATED"

	InvoiceUpdateResponseInvoiceStatusNONE InvoiceUpdateResponseInvoiceStatus = "NONE"

	InvoiceUpdateResponseInvoiceStatusOVERDUE InvoiceUpdateResponseInvoiceStatus = "OVERDUE"

	InvoiceUpdateResponseInvoiceStatusPAID InvoiceUpdateResponseInvoiceStatus = "PAID"

	InvoiceUpdateResponseInvoiceStatusSENT InvoiceUpdateResponseInvoiceStatus = "SENT"

	InvoiceUpdateResponseInvoiceStatusUNPAID InvoiceUpdateResponseInvoiceStatus = "UNPAID"

	InvoiceUpdateResponseInvoiceStatusVOIDED InvoiceUpdateResponseInvoiceStatus = "VOIDED"
)

// Defines values for InvoicesResponseExternalResult.
const (
	InvoicesResponseExternalResultERR InvoicesResponseExternalResult = "ERR"

	InvoicesResponseExternalResultOK InvoicesResponseExternalResult = "OK"
)

// Defines values for ProductSearchResponseResult.
const (
	ProductSearchResponseResultERR ProductSearchResponseResult = "ERR"

	ProductSearchResponseResultOK ProductSearchResponseResult = "OK"
)

// Defines values for ResultIdAccountingResponseResult.
const (
	ResultIdAccountingResponseResultERR ResultIdAccountingResponseResult = "ERR"

	ResultIdAccountingResponseResultOK ResultIdAccountingResponseResult = "OK"
)

// Defines values for TaxSearchResponseResult.
const (
	TaxSearchResponseResultERR TaxSearchResponseResult = "ERR"

	TaxSearchResponseResultOK TaxSearchResponseResult = "OK"
)

// Defines values for TermsResponseResult.
const (
	TermsResponseResultERR TermsResponseResult = "ERR"

	TermsResponseResultOK TermsResponseResult = "OK"
)

// Defines values for UpdatedContactCustomerType.
const (
	UpdatedContactCustomerTypeCOMPANY UpdatedContactCustomerType = "COMPANY"

	UpdatedContactCustomerTypeCONTACT UpdatedContactCustomerType = "CONTACT"
)

// Defines values for UpdatedContactSyncAction.
const (
	UpdatedContactSyncActionCREATE UpdatedContactSyncAction = "CREATE"

	UpdatedContactSyncActionDELETE UpdatedContactSyncAction = "DELETE"

	UpdatedContactSyncActionUPDATE UpdatedContactSyncAction = "UPDATE"
)

// Defines values for UpdatedProductSyncAction.
const (
	UpdatedProductSyncActionCREATE UpdatedProductSyncAction = "CREATE"

	UpdatedProductSyncActionDELETE UpdatedProductSyncAction = "DELETE"

	UpdatedProductSyncActionUPDATE UpdatedProductSyncAction = "UPDATE"
)

// The URL Settings, which defines the URL endpoints that HubSpot will send requests to an external accounting application for certain actions.
type AccountingAppSettings struct {
	// The ID of the accounting app. This is the identifier of the application created in your HubSpot developer portal.
	AppId int32 `json:"appId"`

	// Outlines the features that are supported by the external accounting system.
	Features *AccountingFeatures `json:"features,omitempty"`

	// The URL endpoints that HubSpot will send requests to an external accounting system for certain actions.
	Urls AccountingAppUrls `json:"urls"`
}

// The URL endpoints that HubSpot will send requests to an external accounting system for certain actions.
type AccountingAppUrls struct {
	// A URL that specifies the endpoint where a new customer can be created.
	CreateCustomerUrl *string `json:"createCustomerUrl,omitempty"`

	// A URL that specifies the endpoint where an invoices can be created.
	CreateInvoiceUrl *string `json:"createInvoiceUrl,omitempty"`

	// A template URL that indicates the endpoint where a customer can be fetched by ID. Note that ${CUSTOMER_ID} in this URL will be replaced by the actual customer ID. For example: https://myapp.com/api/customers/${CUSTOMER_ID}
	CustomerUrlTemplate string `json:"customerUrlTemplate"`

	// A URL that specifies the endpoint where exchange rates can be queried.
	ExchangeRateUrl *string `json:"exchangeRateUrl,omitempty"`

	// A URL that specifies the endpoint where an invoice PDF can be retrieved.
	GetInvoicePdfUrl string `json:"getInvoicePdfUrl"`

	// A URL that specifies the endpoint where invoices can be retrieved.
	GetInvoiceUrl string `json:"getInvoiceUrl"`

	// A URL that specifies the endpoint where payment terms can be retrieved.
	GetTermsUrl *string `json:"getTermsUrl,omitempty"`

	// A template URL that indicates the endpoint where an invoice can be fetched by ID. Note that ${INVOICE_ID} in this URL will be replaced by the actual invoice ID. For example: https://myapp.com/api/invoices/${INVOICE_ID}
	InvoiceUrlTemplate string `json:"invoiceUrlTemplate"`

	// A template URL that indicates the endpoint where a product can be fetched by ID. Note that ${PRODUCT_ID} in this URL will be replaced by the actual product ID. For example: https://myapp.com/api/products/${PRODUCT_ID}
	ProductUrlTemplate string  `json:"productUrlTemplate"`
	SearchCountUrl     *string `json:"searchCountUrl,omitempty"`

	// A URL that specifies the endpoint where a customer search can be performed.
	SearchCustomerUrl string `json:"searchCustomerUrl"`

	// A URL that specifies the endpoint where an invoice search can be performed.
	SearchInvoiceUrl *string `json:"searchInvoiceUrl,omitempty"`

	// A URL that specifies the endpoint where a product search can be performed.
	SearchProductUrl *string `json:"searchProductUrl,omitempty"`

	// A URL that specifies the endpoint where a tax search can be performed.
	SearchTaxUrl *string `json:"searchTaxUrl,omitempty"`
	SearchUrl    *string `json:"searchUrl,omitempty"`
}

// Representation of a customer in the external accounting system.
type AccountingExtensionCustomer struct {
	// Represents an address of a customer
	BillingAddress *Address `json:"billingAddress,omitempty"`

	// The ISO 4217 currency code that represents the currency the customer should be billed in.
	CurrencyCode *string `json:"currencyCode,omitempty"`

	// The customer's email address
	EmailAddress *string `json:"emailAddress,omitempty"`

	// The ID of the customer in the external accounting system.
	Id string `json:"id"`

	// The customer's full name
	Name string `json:"name"`
}

// Representation of an invoice in the external accounting system.
type AccountingExtensionInvoice struct {
	// The total amount due.
	AmountDue float32 `json:"amountDue"`

	// The remaining outstanding balance due.
	Balance *float32 `json:"balance,omitempty"`

	// The ISO 4217 currency code that represents the currency of this invoice.
	Currency string `json:"currency"`

	// The ID of the customer that this invoice is for.
	CustomerId *string `json:"customerId,omitempty"`

	// The name of the customer that this invoice is for.
	CustomerName string `json:"customerName"`

	// The due date for payment of the invoice, in ISO-8601 date format (yyyy-MM-dd)
	DueDate openapi_types.Date `json:"dueDate"`

	// A link to the invoice in the external accounting system.
	InvoiceLink string `json:"invoiceLink"`

	// The invoice number
	InvoiceNumber *string `json:"invoiceNumber,omitempty"`

	// The currency status of the invoice.
	Status AccountingExtensionInvoiceStatus `json:"status"`
}

// The currency status of the invoice.
type AccountingExtensionInvoiceStatus string

// Representation of payment terms that are defined in the external accounting system. One of 'dueDays' or 'dueDate' is required.
type AccountingExtensionTerm struct {
	// The due date for payment of the invoice, in ISO-8601 date format (yyyy-MM-dd)
	DueDate *openapi_types.Date `json:"dueDate,omitempty"`

	// The number of days that these payment terms represent.
	DueDays *int32 `json:"dueDays,omitempty"`

	// The ID of the payment terms in the external accounting system.
	Id string `json:"id"`

	// The display name of the payment terms.
	Name string `json:"name"`
}

// Outlines the features that are supported by the external accounting system.
type AccountingFeatures struct {
	// Indicates what elements of creating invoices in HubSpot is supported for the integration.
	CreateInvoice CreateInvoiceFeature `json:"createInvoice"`

	// Indicates if importing invoices from the external account system into HubSpot is supported for the integration.
	ImportInvoice ImportInvoiceFeature `json:"importInvoice"`

	// Indicates if syncing objects from the external account system into HubSpot is supported for the integration.
	// This is a map, where the key is one of `CONTACT` or `PRODUCT`, to indicate which type of object you do or don't support syncing.
	// For example:
	// ```
	//   "sync": {
	//     "CONTACT": {
	//       "toHubSpot": true
	//     },
	//     "PRODUCT": {
	//       "toHubSpot": true
	//     }
	//   }
	// ```
	Sync AccountingFeatures_Sync `json:"sync"`
}

// Indicates if syncing objects from the external account system into HubSpot is supported for the integration.
// This is a map, where the key is one of `CONTACT` or `PRODUCT`, to indicate which type of object you do or don't support syncing.
// For example:
// ```
//   "sync": {
//     "CONTACT": {
//       "toHubSpot": true
//     },
//     "PRODUCT": {
//       "toHubSpot": true
//     }
//   }
// ```
type AccountingFeatures_Sync struct {
	AdditionalProperties map[string]ObjectSyncFeature `json:"-"`
}

// ActionResponse defines model for ActionResponse.
type ActionResponse struct {
	CompletedAt time.Time             `json:"completedAt"`
	Links       *ActionResponse_Links `json:"links,omitempty"`
	RequestedAt *time.Time            `json:"requestedAt,omitempty"`
	StartedAt   time.Time             `json:"startedAt"`
	Status      ActionResponseStatus  `json:"status"`
}

// ActionResponse_Links defines model for ActionResponse.Links.
type ActionResponse_Links struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ActionResponseStatus defines model for ActionResponse.Status.
type ActionResponseStatus string

// Represents an address of a customer
type Address struct {
	// The city of the address.
	City *string `json:"city,omitempty"`

	// The country of the address.
	Country *string `json:"country,omitempty"`

	// A region of the county of the address.  May represent county, state etc.
	CountrySubDivisionCode *string `json:"countrySubDivisionCode,omitempty"`

	// The first line of the address.
	LineOne *string `json:"lineOne,omitempty"`

	// The postcode/zipcode of the address.
	PostalCode *string `json:"postalCode,omitempty"`
}

// Indicates what elements of creating invoices in HubSpot is supported for the integration.
type CreateInvoiceFeature struct {
	// Indicates if creating invoices in HubSpot is supported for the integration.
	Enabled bool `json:"enabled"`

	// Lists the individual aspects of creating invoices that are enabled for the integration, as part of the create invoice flow in HubSpot.
	SubFeatures CreateInvoiceSubFeatures `json:"subFeatures"`
}

// Lists the individual aspects of creating invoices that are enabled for the integration, as part of the create invoice flow in HubSpot.
type CreateInvoiceSubFeatures struct {
	// Indicates if a new customer can be created in the external accounting system.
	CreateCustomer bool `json:"createCustomer"`

	// Indicates if the external accounting system supports fetching exchange rates when create an invoice in HubSpot for a customer billed in a different currency.
	ExchangeRates bool `json:"exchangeRates"`

	// Indicates if a visible comment can be added to invoices.
	InvoiceComments bool `json:"invoiceComments"`

	// Indicates if invoice-level discounts can be added to invoices.
	InvoiceDiscounts bool `json:"invoiceDiscounts"`

	// Indicates if taxes can be specified by the HubSpot user for line items.
	Taxes bool `json:"taxes"`

	// Indicates if the external accounting system supports fetching payment terms.
	Terms bool `json:"terms"`
}

// Information about the account in your external account system.
type CreateUserAccountRequestExternal struct {
	// The id of the account in your system.
	AccountId string `json:"accountId"`

	// The name of the account in your system. This is normally the name visible to your users.
	AccountName string `json:"accountName"`

	// The default currency that this account uses.
	CurrencyCode string `json:"currencyCode"`
}

// A response to a search for customers.
type CustomerSearchResponseExternal struct {
	// Designates if the response is a success ('OK') or failure ('ERR').
	Result CustomerSearchResponseExternalResult `json:"@result"`

	// The list of customers that matched the search criteria.
	Customers []AccountingExtensionCustomer `json:"customers"`
}

// Designates if the response is a success ('OK') or failure ('ERR').
type CustomerSearchResponseExternalResult string

// Error defines model for Error.
type Error struct {
	// The error category
	Category string `json:"category"`

	// Context about the error condition
	Context *Error_Context `json:"context,omitempty"`

	// A unique identifier for the request. Include this value with any error reports or support tickets
	CorrelationId string `json:"correlationId"`

	// further information about the error
	Errors *[]ErrorDetail `json:"errors,omitempty"`

	// A map of link names to associated URIs containing documentation about the error or recommended remediation steps
	Links *Error_Links `json:"links,omitempty"`

	// A human readable message describing the error along with remediation steps where appropriate
	Message string `json:"message"`

	// A specific category that contains more specific detail about the error
	SubCategory *string `json:"subCategory,omitempty"`
}

// Context about the error condition
type Error_Context struct {
	AdditionalProperties map[string][]string `json:"-"`
}

// A map of link names to associated URIs containing documentation about the error or recommended remediation steps
type Error_Links struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ErrorDetail defines model for ErrorDetail.
type ErrorDetail struct {
	// The status code associated with the error detail
	Code *string `json:"code,omitempty"`

	// Context about the error condition
	Context *ErrorDetail_Context `json:"context,omitempty"`

	// The name of the field or parameter in which the error was found.
	In *string `json:"in,omitempty"`

	// A human readable message describing the error along with remediation steps where appropriate
	Message string `json:"message"`

	// A specific category that contains more specific detail about the error
	SubCategory *string `json:"subCategory,omitempty"`
}

// Context about the error condition
type ErrorDetail_Context struct {
	AdditionalProperties map[string][]string `json:"-"`
}

// A response to the request for an exchange rate value. It represents the exchange rate from the source currency to the target currency.
type ExchangeRateResponse struct {
	// Designates if the response is a success ('OK') or failure ('ERR').
	Result ExchangeRateResponseResult `json:"@result"`

	// The exchange rate between the 2 currencies
	ExchangeRate float32 `json:"exchangeRate"`

	// The ISO 4217 currency code that represents the source currency of the exchange rate.
	SourceCurrencyCode string `json:"sourceCurrencyCode"`

	// The ISO 4217 currency code that represents the target currency of the exchange rate.
	TargetCurrencyCode string `json:"targetCurrencyCode"`
}

// Designates if the response is a success ('OK') or failure ('ERR').
type ExchangeRateResponseResult string

// Indicates if importing invoices from the external account system into HubSpot is supported for the integration.
type ImportInvoiceFeature struct {
	// Indicates if importing invoices from the external account system into HubSpot.
	Enabled bool `json:"enabled"`
}

// InvoiceCreatePaymentRequest defines model for InvoiceCreatePaymentRequest.
type InvoiceCreatePaymentRequest struct {
	// The amount that this payment is for.
	AmountPaid float32 `json:"amountPaid"`

	// The ISO 4217 currency code that represents the currency of the payment.
	CurrencyCode string `json:"currencyCode"`

	// The id of this payment in the external accounting system.
	ExternalPaymentId string `json:"externalPaymentId"`

	// The datetime that this payment was received.
	PaymentDateTime time.Time `json:"paymentDateTime"`
}

// A response that contains the PDF of an invoice
type InvoicePdfResponse struct {
	// Designates if the response is a success ('OK') or failure ('ERR').
	Result *InvoicePdfResponseResult `json:"@result,omitempty"`

	// The bytes of the invoice PDF.
	Invoice []byte `json:"invoice"`
}

// Designates if the response is a success ('OK') or failure ('ERR').
type InvoicePdfResponseResult string

// The invoice data stored in HubSpot
type InvoiceReadResponse struct {
	Archived   bool       `json:"archived"`
	ArchivedAt *time.Time `json:"archivedAt,omitempty"`

	// The remaining balance due for the invoice.
	BalanceDue float32 `json:"balanceDue"`

	// The datetime that the invoice was created in HubSpot.
	CreatedAt time.Time `json:"createdAt"`

	// The ISO 4217 currency code that represents the currency of the invoice.
	CurrencyCode string `json:"currencyCode"`

	// The due date of the invoice
	DueDate openapi_types.Date `json:"dueDate"`

	// The id of the account in the external accounting system that this invoice is related to.
	ExternalAccountId string `json:"externalAccountId"`

	// The datetime that the invoice was created in the external accounting system.
	ExternalCreateDateTime *int64 `json:"externalCreateDateTime,omitempty"`

	// The invoice number. Note that this is _not_ the ID of the invoice, but the number that the billed customer will see.
	ExternalInvoiceNumber *string `json:"externalInvoiceNumber,omitempty"`

	// The id of the customer in the external accounting system that the invoice was sent to.
	ExternalRecipientId string `json:"externalRecipientId"`

	// The id of this invoice in the external accounting system.
	Id string `json:"id"`

	// The status of the invoice
	InvoiceStatus InvoiceReadResponseInvoiceStatus `json:"invoiceStatus"`

	// Indicated is the invoice has been voided or not.
	IsVoided bool `json:"isVoided"`

	// The datetime that that invoice was sent to the customer.
	ReceivedByRecipientDate *int64 `json:"receivedByRecipientDate,omitempty"`

	// The total amount that this invoice is for.
	TotalAmountBilled float32 `json:"totalAmountBilled"`

	// The datetime that the invoice was last updated in HubSpot.
	UpdatedAt time.Time `json:"updatedAt"`
}

// The status of the invoice
type InvoiceReadResponseInvoiceStatus string

// A response to a search for invoices.
type InvoiceSearchResponse struct {
	// Designates if the response is a success ('OK') or failure ('ERR').
	Result *InvoiceSearchResponseResult `json:"@result,omitempty"`

	// The list of invoices that matched the search criteria.
	Invoices []AccountingExtensionInvoice `json:"invoices"`
}

// Designates if the response is a success ('OK') or failure ('ERR').
type InvoiceSearchResponseResult string

// The invoice data to update in HubSpot
type InvoiceUpdateRequest struct {
	// The ISO 4217 currency code that represents the currency used in the invoice to bill the recipient
	CurrencyCode *string `json:"currencyCode,omitempty"`

	// The ISO-8601 due date of the invoice.
	DueDate               *openapi_types.Date `json:"dueDate,omitempty"`
	ExternalInvoiceNumber *string             `json:"externalInvoiceNumber,omitempty"`

	// The ID of the invoice recipient. This is the recipient ID from the external accounting system.
	ExternalRecipientId *string `json:"externalRecipientId,omitempty"`

	// The number / name of the invoice.
	InvoiceNumber *string `json:"invoiceNumber,omitempty"`

	// States if the invoice is voided or not.
	IsVoided *bool `json:"isVoided,omitempty"`

	// The ISO-8601 datetime of when the customer received the invoice.
	ReceivedByCustomerDate  *string `json:"receivedByCustomerDate,omitempty"`
	ReceivedByRecipientDate *int64  `json:"receivedByRecipientDate,omitempty"`
}

// InvoiceUpdateResponse defines model for InvoiceUpdateResponse.
type InvoiceUpdateResponse struct {
	Archived                bool                               `json:"archived"`
	ArchivedAt              *time.Time                         `json:"archivedAt,omitempty"`
	BalanceDue              float32                            `json:"balanceDue"`
	CreatedAt               time.Time                          `json:"createdAt"`
	CurrencyCode            string                             `json:"currencyCode"`
	DueDate                 openapi_types.Date                 `json:"dueDate"`
	ExternalAccountId       string                             `json:"externalAccountId"`
	ExternalCreateDateTime  *int64                             `json:"externalCreateDateTime,omitempty"`
	ExternalInvoiceNumber   *string                            `json:"externalInvoiceNumber,omitempty"`
	ExternalRecipientId     string                             `json:"externalRecipientId"`
	Id                      string                             `json:"id"`
	InvoiceStatus           InvoiceUpdateResponseInvoiceStatus `json:"invoiceStatus"`
	IsVoided                bool                               `json:"isVoided"`
	ReceivedByRecipientDate *int64                             `json:"receivedByRecipientDate,omitempty"`
	TotalAmountBilled       float32                            `json:"totalAmountBilled"`
	UpdatedAt               time.Time                          `json:"updatedAt"`
}

// InvoiceUpdateResponseInvoiceStatus defines model for InvoiceUpdateResponse.InvoiceStatus.
type InvoiceUpdateResponseInvoiceStatus string

// A response to a request for invoices.
type InvoicesResponseExternal struct {
	// Designates if the response is a success ('OK') or failure ('ERR').
	Result *InvoicesResponseExternalResult `json:"@result,omitempty"`

	// The list of invoices that were found for the request.
	Invoices []AccountingExtensionInvoice `json:"invoices"`
}

// Designates if the response is a success ('OK') or failure ('ERR').
type InvoicesResponseExternalResult string

// ObjectSyncFeature defines model for ObjectSyncFeature.
type ObjectSyncFeature struct {
	// Indicates if syncing the object type from the external accounting system into HubSpot is supported.
	ToHubSpot bool `json:"toHubSpot"`
}

// Representation of a product in the external accounting system.
type Product struct {
	// The description of the product.
	Description *string `json:"description,omitempty"`

	// The ID of the product in the external accounting system.
	Id string `json:"id"`

	// The display name of the product.
	Name string `json:"name"`

	// Represents a tax in the external accounting system.
	SalesTaxType *TaxType `json:"salesTaxType,omitempty"`

	// Identifies if the product is tax exempt or not.
	TaxExempt bool `json:"taxExempt"`

	// Represents a unit price
	UnitPrice UnitPrice `json:"unitPrice"`
}

// A response to a search for products.
type ProductSearchResponse struct {
	// Designates if the response is a success ('OK') or failure ('ERR').
	Result *ProductSearchResponseResult `json:"@result,omitempty"`

	// The list of products that matched the search criteria.
	Products []Product `json:"products"`
}

// Designates if the response is a success ('OK') or failure ('ERR').
type ProductSearchResponseResult string

// A response to the creation of an entity (eg. invoice, customer).
type ResultIdAccountingResponse struct {
	// Designates if the response is a success ('OK') or failure ('ERR').
	Result ResultIdAccountingResponseResult `json:"@result"`

	// The ID of created entity.
	Id string `json:"id"`
}

// Designates if the response is a success ('OK') or failure ('ERR').
type ResultIdAccountingResponseResult string

// A request to import external accounting contact properties in HubSpot
type SyncContactsRequest struct {
	// The ID of the account in the external accounting system. This is the value that will be passed as `accountId` for all outbound calls for the user from HubSpot to the external accounting system.
	AccountId string `json:"accountId"`

	// A list of contacts to be imported.
	Contacts []UpdatedContact `json:"contacts"`
}

// A request to import external accounting product properties in HubSpot
type SyncProductsRequest struct {
	// The ID of the account in the external accounting system. This is the value that will be passed as `accountId` for all outbound calls for the user from HubSpot to the external accounting system.
	AccountId string `json:"accountId"`

	// A list of products to be imported.
	Products []UpdatedProduct `json:"products"`
}

// Representation of a tax defined in the external accounting system.
type Tax struct {
	// The code/ID of the tax in the external accounting system.
	Code string `json:"code"`

	// The display name of the tax.
	Name string `json:"name"`

	// The tax percentage.  For example, 8.05 represents a 8.05% tax rate.
	Percentage float32 `json:"percentage"`
}

// A response to a search for taxes.
type TaxSearchResponse struct {
	// Designates if the response is a success ('OK') or failure ('ERR').
	Result *TaxSearchResponseResult `json:"@result,omitempty"`

	// The list of taxes that matched the search criteria
	Taxes []Tax `json:"taxes"`
}

// Designates if the response is a success ('OK') or failure ('ERR').
type TaxSearchResponseResult string

// Represents a tax in the external accounting system.
type TaxType struct {
	// The code/ID of the tax in the external accounting system.
	Code string `json:"code"`

	// The display name of the tax.
	Name *string `json:"name,omitempty"`
}

// A response to a search for payment terms.
type TermsResponse struct {
	// Designates if the response is a success ('OK') or failure ('ERR').
	Result *TermsResponseResult `json:"@result,omitempty"`

	// The list of payment terms that matched the search criteria.
	Terms []AccountingExtensionTerm `json:"terms"`
}

// Designates if the response is a success ('OK') or failure ('ERR').
type TermsResponseResult string

// Represents a unit price
type UnitPrice struct {
	// The actual unit price amount.
	Amount *float32 `json:"amount,omitempty"`

	// Indicates if the unit price amount already includes taxes.
	TaxIncluded bool `json:"taxIncluded"`
}

// A request to import external accounting contact properties in HubSpot
type UpdatedContact struct {
	// Designates the type of the customer object.
	CustomerType *UpdatedContactCustomerType `json:"customerType,omitempty"`

	// The customer's email address
	EmailAddress string `json:"emailAddress"`

	// The ID of the customer in the external accounting system.
	Id string `json:"id"`

	// The operation to be performed.
	SyncAction UpdatedContactSyncAction `json:"syncAction"`

	// The timestamp (ISO8601 format) when the customer was updated in the external accounting system.
	UpdatedAt time.Time `json:"updatedAt"`
}

// Designates the type of the customer object.
type UpdatedContactCustomerType string

// The operation to be performed.
type UpdatedContactSyncAction string

// A request to import external accounting product properties in HubSpot
type UpdatedProduct struct {
	// The ISO 4217 currency code that represents the currency of the product price.
	CurrencyCode *string `json:"currencyCode,omitempty"`

	// The ID of the product in the external accounting system.
	Id string `json:"id"`

	// The price of the product.
	Price float32 `json:"price"`

	// A map of key-value product properties to be imported.
	Properties UpdatedProduct_Properties `json:"properties"`

	// The operation to be performed.
	SyncAction UpdatedProductSyncAction `json:"syncAction"`

	// The timestamp (ISO8601 format) when the product was updated in the external accounting system.
	UpdatedAt time.Time `json:"updatedAt"`
}

// A map of key-value product properties to be imported.
type UpdatedProduct_Properties struct {
	AdditionalProperties map[string]string `json:"-"`
}

// The operation to be performed.
type UpdatedProductSyncAction string

// CreateCustomerRequestJSONBody defines parameters for CreateCustomerRequest.
type CreateCustomerRequestJSONBody ResultIdAccountingResponse

// DoCustomerSearchRequestJSONBody defines parameters for DoCustomerSearchRequest.
type DoCustomerSearchRequestJSONBody CustomerSearchResponseExternal

// CreateExchangeRateRequestJSONBody defines parameters for CreateExchangeRateRequest.
type CreateExchangeRateRequestJSONBody ExchangeRateResponse

// CreateInvoiceRequestJSONBody defines parameters for CreateInvoiceRequest.
type CreateInvoiceRequestJSONBody ResultIdAccountingResponse

// InvoicePdfRequestJSONBody defines parameters for InvoicePdfRequest.
type InvoicePdfRequestJSONBody InvoicePdfResponse

// DoInvoiceSearchRequestJSONBody defines parameters for DoInvoiceSearchRequest.
type DoInvoiceSearchRequestJSONBody InvoiceSearchResponse

// GetByIdRequestJSONBody defines parameters for GetByIdRequest.
type GetByIdRequestJSONBody InvoicesResponseExternal

// DoProductSearchRequestJSONBody defines parameters for DoProductSearchRequest.
type DoProductSearchRequestJSONBody ProductSearchResponse

// DoTaxSearchRequestJSONBody defines parameters for DoTaxSearchRequest.
type DoTaxSearchRequestJSONBody TaxSearchResponse

// CreateTermRequestJSONBody defines parameters for CreateTermRequest.
type CreateTermRequestJSONBody TermsResponse

// GetByIdInvoiceParams defines parameters for GetByIdInvoice.
type GetByIdInvoiceParams struct {
	// The ID of the account that the invoice belongs to. This is the account ID from the external accounting system.
	AccountId string `json:"accountId"`
}

// UpdateInvoiceJSONBody defines parameters for UpdateInvoice.
type UpdateInvoiceJSONBody InvoiceUpdateRequest

// UpdateInvoiceParams defines parameters for UpdateInvoice.
type UpdateInvoiceParams struct {
	// The ID of the account that the invoice belongs to. This is the account ID from the external accounting system.
	AccountId string `json:"accountId"`
}

// CreatePaymentJSONBody defines parameters for CreatePayment.
type CreatePaymentJSONBody InvoiceCreatePaymentRequest

// CreatePaymentParams defines parameters for CreatePayment.
type CreatePaymentParams struct {
	// The ID of the account that the invoice belongs to. This is the account ID from the external accounting system.
	AccountId *string `json:"accountId,omitempty"`
}

// ReplaceAppJSONBody defines parameters for ReplaceApp.
type ReplaceAppJSONBody AccountingAppSettings

// CreateContactContactsJSONBody defines parameters for CreateContactContacts.
type CreateContactContactsJSONBody SyncContactsRequest

// CreateProductProductsJSONBody defines parameters for CreateProductProducts.
type CreateProductProductsJSONBody SyncProductsRequest

// ReplaceUserAccountsJSONBody defines parameters for ReplaceUserAccounts.
type ReplaceUserAccountsJSONBody CreateUserAccountRequestExternal

// CreateCustomerRequestJSONRequestBody defines body for CreateCustomerRequest for application/json ContentType.
type CreateCustomerRequestJSONRequestBody CreateCustomerRequestJSONBody

// DoCustomerSearchRequestJSONRequestBody defines body for DoCustomerSearchRequest for application/json ContentType.
type DoCustomerSearchRequestJSONRequestBody DoCustomerSearchRequestJSONBody

// CreateExchangeRateRequestJSONRequestBody defines body for CreateExchangeRateRequest for application/json ContentType.
type CreateExchangeRateRequestJSONRequestBody CreateExchangeRateRequestJSONBody

// CreateInvoiceRequestJSONRequestBody defines body for CreateInvoiceRequest for application/json ContentType.
type CreateInvoiceRequestJSONRequestBody CreateInvoiceRequestJSONBody

// InvoicePdfRequestJSONRequestBody defines body for InvoicePdfRequest for application/json ContentType.
type InvoicePdfRequestJSONRequestBody InvoicePdfRequestJSONBody

// DoInvoiceSearchRequestJSONRequestBody defines body for DoInvoiceSearchRequest for application/json ContentType.
type DoInvoiceSearchRequestJSONRequestBody DoInvoiceSearchRequestJSONBody

// GetByIdRequestJSONRequestBody defines body for GetByIdRequest for application/json ContentType.
type GetByIdRequestJSONRequestBody GetByIdRequestJSONBody

// DoProductSearchRequestJSONRequestBody defines body for DoProductSearchRequest for application/json ContentType.
type DoProductSearchRequestJSONRequestBody DoProductSearchRequestJSONBody

// DoTaxSearchRequestJSONRequestBody defines body for DoTaxSearchRequest for application/json ContentType.
type DoTaxSearchRequestJSONRequestBody DoTaxSearchRequestJSONBody

// CreateTermRequestJSONRequestBody defines body for CreateTermRequest for application/json ContentType.
type CreateTermRequestJSONRequestBody CreateTermRequestJSONBody

// UpdateInvoiceJSONRequestBody defines body for UpdateInvoice for application/json ContentType.
type UpdateInvoiceJSONRequestBody UpdateInvoiceJSONBody

// CreatePaymentJSONRequestBody defines body for CreatePayment for application/json ContentType.
type CreatePaymentJSONRequestBody CreatePaymentJSONBody

// ReplaceAppJSONRequestBody defines body for ReplaceApp for application/json ContentType.
type ReplaceAppJSONRequestBody ReplaceAppJSONBody

// CreateContactContactsJSONRequestBody defines body for CreateContactContacts for application/json ContentType.
type CreateContactContactsJSONRequestBody CreateContactContactsJSONBody

// CreateProductProductsJSONRequestBody defines body for CreateProductProducts for application/json ContentType.
type CreateProductProductsJSONRequestBody CreateProductProductsJSONBody

// ReplaceUserAccountsJSONRequestBody defines body for ReplaceUserAccounts for application/json ContentType.
type ReplaceUserAccountsJSONRequestBody ReplaceUserAccountsJSONBody

// Getter for additional properties for AccountingFeatures_Sync. Returns the specified
// element and whether it was found
func (a AccountingFeatures_Sync) Get(fieldName string) (value ObjectSyncFeature, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for AccountingFeatures_Sync
func (a *AccountingFeatures_Sync) Set(fieldName string, value ObjectSyncFeature) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]ObjectSyncFeature)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for AccountingFeatures_Sync to handle AdditionalProperties
func (a *AccountingFeatures_Sync) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]ObjectSyncFeature)
		for fieldName, fieldBuf := range object {
			var fieldVal ObjectSyncFeature
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for AccountingFeatures_Sync to handle AdditionalProperties
func (a AccountingFeatures_Sync) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ActionResponse_Links. Returns the specified
// element and whether it was found
func (a ActionResponse_Links) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ActionResponse_Links
func (a *ActionResponse_Links) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ActionResponse_Links to handle AdditionalProperties
func (a *ActionResponse_Links) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ActionResponse_Links to handle AdditionalProperties
func (a ActionResponse_Links) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Error_Context. Returns the specified
// element and whether it was found
func (a Error_Context) Get(fieldName string) (value []string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Error_Context
func (a *Error_Context) Set(fieldName string, value []string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string][]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Error_Context to handle AdditionalProperties
func (a *Error_Context) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string][]string)
		for fieldName, fieldBuf := range object {
			var fieldVal []string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Error_Context to handle AdditionalProperties
func (a Error_Context) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Error_Links. Returns the specified
// element and whether it was found
func (a Error_Links) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Error_Links
func (a *Error_Links) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Error_Links to handle AdditionalProperties
func (a *Error_Links) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Error_Links to handle AdditionalProperties
func (a Error_Links) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ErrorDetail_Context. Returns the specified
// element and whether it was found
func (a ErrorDetail_Context) Get(fieldName string) (value []string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ErrorDetail_Context
func (a *ErrorDetail_Context) Set(fieldName string, value []string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string][]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ErrorDetail_Context to handle AdditionalProperties
func (a *ErrorDetail_Context) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string][]string)
		for fieldName, fieldBuf := range object {
			var fieldVal []string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ErrorDetail_Context to handle AdditionalProperties
func (a ErrorDetail_Context) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for UpdatedProduct_Properties. Returns the specified
// element and whether it was found
func (a UpdatedProduct_Properties) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for UpdatedProduct_Properties
func (a *UpdatedProduct_Properties) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for UpdatedProduct_Properties to handle AdditionalProperties
func (a *UpdatedProduct_Properties) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for UpdatedProduct_Properties to handle AdditionalProperties
func (a UpdatedProduct_Properties) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
