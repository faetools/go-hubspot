// Package properties provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/faetools/devtool version (devel) DO NOT EDIT.
package properties

import (
	"encoding/json"
	"fmt"
	"time"
)

const (
	HapikeyScopes       = "hapikey.Scopes"
	Oauth2Scopes        = "oauth2.Scopes"
	Oauth2_legacyScopes = "oauth2_legacy.Scopes"
)

// Defines values for BatchResponsePropertyStatus.
const (
	BatchResponsePropertyStatusCANCELED BatchResponsePropertyStatus = "CANCELED"

	BatchResponsePropertyStatusCOMPLETE BatchResponsePropertyStatus = "COMPLETE"

	BatchResponsePropertyStatusPENDING BatchResponsePropertyStatus = "PENDING"

	BatchResponsePropertyStatusPROCESSING BatchResponsePropertyStatus = "PROCESSING"
)

// Defines values for ErrorCategoryHttpStatus.
const (
	ErrorCategoryHttpStatusACCEPTED ErrorCategoryHttpStatus = "ACCEPTED"

	ErrorCategoryHttpStatusALREADYREPORTED ErrorCategoryHttpStatus = "ALREADY_REPORTED"

	ErrorCategoryHttpStatusBADGATEWAY ErrorCategoryHttpStatus = "BAD_GATEWAY"

	ErrorCategoryHttpStatusBADREQUEST ErrorCategoryHttpStatus = "BAD_REQUEST"

	ErrorCategoryHttpStatusCONFLICT ErrorCategoryHttpStatus = "CONFLICT"

	ErrorCategoryHttpStatusCONTINUE ErrorCategoryHttpStatus = "CONTINUE"

	ErrorCategoryHttpStatusCREATED ErrorCategoryHttpStatus = "CREATED"

	ErrorCategoryHttpStatusEXPECTATIONFAILED ErrorCategoryHttpStatus = "EXPECTATION_FAILED"

	ErrorCategoryHttpStatusFAILEDDEPENDENCY ErrorCategoryHttpStatus = "FAILED_DEPENDENCY"

	ErrorCategoryHttpStatusFORBIDDEN ErrorCategoryHttpStatus = "FORBIDDEN"

	ErrorCategoryHttpStatusFOUND ErrorCategoryHttpStatus = "FOUND"

	ErrorCategoryHttpStatusGATEWAYTIMEOUT ErrorCategoryHttpStatus = "GATEWAY_TIMEOUT"

	ErrorCategoryHttpStatusGONE ErrorCategoryHttpStatus = "GONE"

	ErrorCategoryHttpStatusHTTPVERSIONNOTSUPPORTED ErrorCategoryHttpStatus = "HTTP_VERSION_NOT_SUPPORTED"

	ErrorCategoryHttpStatusIMATEAPOT ErrorCategoryHttpStatus = "IM_A_TEAPOT"

	ErrorCategoryHttpStatusIMUSED ErrorCategoryHttpStatus = "IM_USED"

	ErrorCategoryHttpStatusINSUFFICIENTSTORAGE ErrorCategoryHttpStatus = "INSUFFICIENT_STORAGE"

	ErrorCategoryHttpStatusINTERNALSERVERERROR ErrorCategoryHttpStatus = "INTERNAL_SERVER_ERROR"

	ErrorCategoryHttpStatusINTERNALSTALESERVICEDISCOVERY ErrorCategoryHttpStatus = "INTERNAL_STALE_SERVICE_DISCOVERY"

	ErrorCategoryHttpStatusLENGTHREQUIRED ErrorCategoryHttpStatus = "LENGTH_REQUIRED"

	ErrorCategoryHttpStatusLOCKED ErrorCategoryHttpStatus = "LOCKED"

	ErrorCategoryHttpStatusLOOPDETECTED ErrorCategoryHttpStatus = "LOOP_DETECTED"

	ErrorCategoryHttpStatusMETHODNOTALLOWED ErrorCategoryHttpStatus = "METHOD_NOT_ALLOWED"

	ErrorCategoryHttpStatusMISDIRECTEDREQUEST ErrorCategoryHttpStatus = "MISDIRECTED_REQUEST"

	ErrorCategoryHttpStatusMOVEDPERMANENTLY ErrorCategoryHttpStatus = "MOVED_PERMANENTLY"

	ErrorCategoryHttpStatusMULTIPLECHOICES ErrorCategoryHttpStatus = "MULTIPLE_CHOICES"

	ErrorCategoryHttpStatusMULTISTATUS ErrorCategoryHttpStatus = "MULTI_STATUS"

	ErrorCategoryHttpStatusNETWORKAUTHENTICATIONREQUIRED ErrorCategoryHttpStatus = "NETWORK_AUTHENTICATION_REQUIRED"

	ErrorCategoryHttpStatusNOCONTENT ErrorCategoryHttpStatus = "NO_CONTENT"

	ErrorCategoryHttpStatusNONAUTHORITATIVEINFORMATION ErrorCategoryHttpStatus = "NON_AUTHORITATIVE_INFORMATION"

	ErrorCategoryHttpStatusNOTACCEPTABLE ErrorCategoryHttpStatus = "NOT_ACCEPTABLE"

	ErrorCategoryHttpStatusNOTEXTENDED ErrorCategoryHttpStatus = "NOT_EXTENDED"

	ErrorCategoryHttpStatusNOTFOUND ErrorCategoryHttpStatus = "NOT_FOUND"

	ErrorCategoryHttpStatusNOTIMPLEMENTED ErrorCategoryHttpStatus = "NOT_IMPLEMENTED"

	ErrorCategoryHttpStatusNOTMODIFIED ErrorCategoryHttpStatus = "NOT_MODIFIED"

	ErrorCategoryHttpStatusOK ErrorCategoryHttpStatus = "OK"

	ErrorCategoryHttpStatusPARTIALCONTENT ErrorCategoryHttpStatus = "PARTIAL_CONTENT"

	ErrorCategoryHttpStatusPAYMENTREQUIRED ErrorCategoryHttpStatus = "PAYMENT_REQUIRED"

	ErrorCategoryHttpStatusPERMANENTREDIRECT ErrorCategoryHttpStatus = "PERMANENT_REDIRECT"

	ErrorCategoryHttpStatusPRECONDITIONFAILED ErrorCategoryHttpStatus = "PRECONDITION_FAILED"

	ErrorCategoryHttpStatusPRECONDITIONREQUIRED ErrorCategoryHttpStatus = "PRECONDITION_REQUIRED"

	ErrorCategoryHttpStatusPROCESSING ErrorCategoryHttpStatus = "PROCESSING"

	ErrorCategoryHttpStatusPROXYAUTHENTICATIONREQUIRED ErrorCategoryHttpStatus = "PROXY_AUTHENTICATION_REQUIRED"

	ErrorCategoryHttpStatusREQUESTEDRANGENOTSATISFIABLE ErrorCategoryHttpStatus = "REQUESTED_RANGE_NOT_SATISFIABLE"

	ErrorCategoryHttpStatusREQUESTENTITYTOOLARGE ErrorCategoryHttpStatus = "REQUEST_ENTITY_TOO_LARGE"

	ErrorCategoryHttpStatusREQUESTHEADERSFIELDSTOOLARGE ErrorCategoryHttpStatus = "REQUEST_HEADERS_FIELDS_TOO_LARGE"

	ErrorCategoryHttpStatusREQUESTTIMEOUT ErrorCategoryHttpStatus = "REQUEST_TIMEOUT"

	ErrorCategoryHttpStatusREQUESTURITOOLONG ErrorCategoryHttpStatus = "REQUEST_URI_TOO_LONG"

	ErrorCategoryHttpStatusRESETCONTENT ErrorCategoryHttpStatus = "RESET_CONTENT"

	ErrorCategoryHttpStatusSEEOTHER ErrorCategoryHttpStatus = "SEE_OTHER"

	ErrorCategoryHttpStatusSERVICEUNAVAILABLE ErrorCategoryHttpStatus = "SERVICE_UNAVAILABLE"

	ErrorCategoryHttpStatusSWITCHINGPROTOCOLS ErrorCategoryHttpStatus = "SWITCHING_PROTOCOLS"

	ErrorCategoryHttpStatusTEMPORARYREDIRECT ErrorCategoryHttpStatus = "TEMPORARY_REDIRECT"

	ErrorCategoryHttpStatusTOOMANYREQUESTS ErrorCategoryHttpStatus = "TOO_MANY_REQUESTS"

	ErrorCategoryHttpStatusUNAUTHORIZED ErrorCategoryHttpStatus = "UNAUTHORIZED"

	ErrorCategoryHttpStatusUNAVAILABLEFORLEGALREASONS ErrorCategoryHttpStatus = "UNAVAILABLE_FOR_LEGAL_REASONS"

	ErrorCategoryHttpStatusUNPROCESSABLEENTITY ErrorCategoryHttpStatus = "UNPROCESSABLE_ENTITY"

	ErrorCategoryHttpStatusUNSUPPORTEDMEDIATYPE ErrorCategoryHttpStatus = "UNSUPPORTED_MEDIA_TYPE"

	ErrorCategoryHttpStatusUPGRADEREQUIRED ErrorCategoryHttpStatus = "UPGRADE_REQUIRED"

	ErrorCategoryHttpStatusUSEPROXY ErrorCategoryHttpStatus = "USE_PROXY"

	ErrorCategoryHttpStatusVARIANTALSONEGOTIATES ErrorCategoryHttpStatus = "VARIANT_ALSO_NEGOTIATES"
)

// Defines values for PropertyCreateFieldType.
const (
	PropertyCreateFieldTypeBooleancheckbox PropertyCreateFieldType = "booleancheckbox"

	PropertyCreateFieldTypeCheckbox PropertyCreateFieldType = "checkbox"

	PropertyCreateFieldTypeDate PropertyCreateFieldType = "date"

	PropertyCreateFieldTypeFile PropertyCreateFieldType = "file"

	PropertyCreateFieldTypeNumber PropertyCreateFieldType = "number"

	PropertyCreateFieldTypeRadio PropertyCreateFieldType = "radio"

	PropertyCreateFieldTypeSelect PropertyCreateFieldType = "select"

	PropertyCreateFieldTypeText PropertyCreateFieldType = "text"

	PropertyCreateFieldTypeTextarea PropertyCreateFieldType = "textarea"
)

// Defines values for PropertyCreateType.
const (
	PropertyCreateTypeDate PropertyCreateType = "date"

	PropertyCreateTypeDatetime PropertyCreateType = "datetime"

	PropertyCreateTypeEnumeration PropertyCreateType = "enumeration"

	PropertyCreateTypeNumber PropertyCreateType = "number"

	PropertyCreateTypeString PropertyCreateType = "string"
)

// Defines values for PropertyUpdateFieldType.
const (
	PropertyUpdateFieldTypeBooleancheckbox PropertyUpdateFieldType = "booleancheckbox"

	PropertyUpdateFieldTypeCheckbox PropertyUpdateFieldType = "checkbox"

	PropertyUpdateFieldTypeDate PropertyUpdateFieldType = "date"

	PropertyUpdateFieldTypeFile PropertyUpdateFieldType = "file"

	PropertyUpdateFieldTypeNumber PropertyUpdateFieldType = "number"

	PropertyUpdateFieldTypeRadio PropertyUpdateFieldType = "radio"

	PropertyUpdateFieldTypeSelect PropertyUpdateFieldType = "select"

	PropertyUpdateFieldTypeText PropertyUpdateFieldType = "text"

	PropertyUpdateFieldTypeTextarea PropertyUpdateFieldType = "textarea"
)

// Defines values for PropertyUpdateType.
const (
	PropertyUpdateTypeDate PropertyUpdateType = "date"

	PropertyUpdateTypeDatetime PropertyUpdateType = "datetime"

	PropertyUpdateTypeEnumeration PropertyUpdateType = "enumeration"

	PropertyUpdateTypeNumber PropertyUpdateType = "number"

	PropertyUpdateTypeString PropertyUpdateType = "string"
)

// BatchInputPropertyCreate defines model for BatchInputPropertyCreate.
type BatchInputPropertyCreate struct {
	Inputs []PropertyCreate `json:"inputs"`
}

// BatchInputPropertyName defines model for BatchInputPropertyName.
type BatchInputPropertyName struct {
	Inputs []PropertyName `json:"inputs"`
}

// BatchReadInputPropertyName defines model for BatchReadInputPropertyName.
type BatchReadInputPropertyName struct {
	Archived bool           `json:"archived"`
	Inputs   []PropertyName `json:"inputs"`
}

// BatchResponseProperty defines model for BatchResponseProperty.
type BatchResponseProperty struct {
	CompletedAt time.Time                    `json:"completedAt"`
	Errors      *[]StandardError             `json:"errors,omitempty"`
	Links       *BatchResponseProperty_Links `json:"links,omitempty"`
	NumErrors   *int32                       `json:"numErrors,omitempty"`
	RequestedAt *time.Time                   `json:"requestedAt,omitempty"`
	Results     []Property                   `json:"results"`
	StartedAt   time.Time                    `json:"startedAt"`
	Status      BatchResponsePropertyStatus  `json:"status"`
}

// BatchResponseProperty_Links defines model for BatchResponseProperty.Links.
type BatchResponseProperty_Links struct {
	AdditionalProperties map[string]string `json:"-"`
}

// BatchResponsePropertyStatus defines model for BatchResponseProperty.Status.
type BatchResponsePropertyStatus string

// CollectionResponseProperty defines model for CollectionResponseProperty.
type CollectionResponseProperty struct {
	Paging  *Paging    `json:"paging,omitempty"`
	Results []Property `json:"results"`
}

// CollectionResponsePropertyGroup defines model for CollectionResponsePropertyGroup.
type CollectionResponsePropertyGroup struct {
	Paging  *Paging         `json:"paging,omitempty"`
	Results []PropertyGroup `json:"results"`
}

// Error defines model for Error.
type Error struct {
	// The error category
	Category string `json:"category"`

	// Context about the error condition
	Context *Error_Context `json:"context,omitempty"`

	// A unique identifier for the request. Include this value with any error reports or support tickets
	CorrelationId string `json:"correlationId"`

	// further information about the error
	Errors *[]ErrorDetail `json:"errors,omitempty"`

	// A map of link names to associated URIs containing documentation about the error or recommended remediation steps
	Links *Error_Links `json:"links,omitempty"`

	// A human readable message describing the error along with remediation steps where appropriate
	Message string `json:"message"`

	// A specific category that contains more specific detail about the error
	SubCategory *string `json:"subCategory,omitempty"`
}

// Context about the error condition
type Error_Context struct {
	AdditionalProperties map[string][]string `json:"-"`
}

// A map of link names to associated URIs containing documentation about the error or recommended remediation steps
type Error_Links struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ErrorCategory defines model for ErrorCategory.
type ErrorCategory struct {
	HttpStatus ErrorCategoryHttpStatus `json:"httpStatus"`
	Name       string                  `json:"name"`
}

// ErrorCategoryHttpStatus defines model for ErrorCategory.HttpStatus.
type ErrorCategoryHttpStatus string

// ErrorDetail defines model for ErrorDetail.
type ErrorDetail struct {
	// The status code associated with the error detail
	Code *string `json:"code,omitempty"`

	// Context about the error condition
	Context *ErrorDetail_Context `json:"context,omitempty"`

	// The name of the field or parameter in which the error was found.
	In *string `json:"in,omitempty"`

	// A human readable message describing the error along with remediation steps where appropriate
	Message string `json:"message"`

	// A specific category that contains more specific detail about the error
	SubCategory *string `json:"subCategory,omitempty"`
}

// Context about the error condition
type ErrorDetail_Context struct {
	AdditionalProperties map[string][]string `json:"-"`
}

// NextPage defines model for NextPage.
type NextPage struct {
	After string  `json:"after"`
	Link  *string `json:"link,omitempty"`
}

// Option defines model for Option.
type Option struct {
	// A description of the option.
	Description *string `json:"description,omitempty"`

	// Options are displayed in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.
	DisplayOrder *int32 `json:"displayOrder,omitempty"`

	// Hidden options will not be displayed in HubSpot.
	Hidden bool `json:"hidden"`

	// A human-readable option label that will be shown in HubSpot.
	Label string `json:"label"`

	// The internal value of the option, which must be used when setting the property value through the API.
	Value string `json:"value"`
}

// OptionInput defines model for OptionInput.
type OptionInput struct {
	// A description of the option.
	Description *string `json:"description,omitempty"`

	// Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.
	DisplayOrder *int32 `json:"displayOrder,omitempty"`

	// Hidden options won't be shown in HubSpot.
	Hidden bool `json:"hidden"`

	// A human-readable option label that will be shown in HubSpot.
	Label string `json:"label"`

	// The internal value of the option, which must be used when setting the property value through the API.
	Value string `json:"value"`
}

// Paging defines model for Paging.
type Paging struct {
	Next *NextPage `json:"next,omitempty"`
}

// Property defines model for Property.
type Property struct {
	// Whether or not the property is archived.
	Archived *bool `json:"archived,omitempty"`

	// When the property was archived.
	ArchivedAt *time.Time `json:"archivedAt,omitempty"`

	// For default properties, true indicates that the property is calculated by a HubSpot process. It has no effect for custom properties.
	Calculated *bool      `json:"calculated,omitempty"`
	CreatedAt  *time.Time `json:"createdAt,omitempty"`

	// The internal user ID of the user who created the property in HubSpot. This field may not exist if the property was created outside of HubSpot.
	CreatedUserId *string `json:"createdUserId,omitempty"`

	// A description of the property that will be shown as help text in HubSpot.
	Description string `json:"description"`

	// Properties are shown in order, starting with the lowest positive integer value.
	DisplayOrder *int32 `json:"displayOrder,omitempty"`

	// For default properties, true indicates that the options are stored externally to the property settings.
	ExternalOptions *bool `json:"externalOptions,omitempty"`

	// Controls how the property appears in HubSpot.
	FieldType string `json:"fieldType"`

	// Whether or not the property can be used in a HubSpot form.
	FormField *bool `json:"formField,omitempty"`

	// The name of the property group the property belongs to.
	GroupName string `json:"groupName"`

	// Whether or not the property's value must be unique. Once set, this can't be changed.
	HasUniqueValue *bool `json:"hasUniqueValue,omitempty"`

	// Whether or not the property will be hidden from the HubSpot UI. It's recommended this be set to false for custom properties.
	Hidden *bool `json:"hidden,omitempty"`

	// This will be true for default object properties built into HubSpot.
	HubspotDefined *bool `json:"hubspotDefined,omitempty"`

	// A human-readable property label that will be shown in HubSpot.
	Label                string                        `json:"label"`
	ModificationMetadata *PropertyModificationMetadata `json:"modificationMetadata,omitempty"`

	// The internal property name, which must be used when referencing the property via the API.
	Name string `json:"name"`

	// A list of valid options for the property. This field is required for enumerated properties, but will be empty for other property types.
	Options []Option `json:"options"`

	// If this property is related to other object(s), they'll be listed here.
	ReferencedObjectType *string `json:"referencedObjectType,omitempty"`

	// Whether or not the property will display the currency symbol set in the account settings.
	ShowCurrencySymbol *bool `json:"showCurrencySymbol,omitempty"`

	// The property data type.
	Type      string     `json:"type"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`

	// The internal user ID of the user who updated the property in HubSpot. This field may not exist if the property was updated outside of HubSpot.
	UpdatedUserId *string `json:"updatedUserId,omitempty"`
}

// PropertyCreate defines model for PropertyCreate.
type PropertyCreate struct {
	// A description of the property that will be shown as help text in HubSpot.
	Description *string `json:"description,omitempty"`

	// Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property to be displayed after any positive values.
	DisplayOrder *int32 `json:"displayOrder,omitempty"`

	// Controls how the property appears in HubSpot.
	FieldType PropertyCreateFieldType `json:"fieldType"`

	// Whether or not the property can be used in a HubSpot form.
	FormField *bool `json:"formField,omitempty"`

	// The name of the property group the property belongs to.
	GroupName string `json:"groupName"`

	// Whether or not the property's value must be unique. Once set, this can't be changed.
	HasUniqueValue *bool `json:"hasUniqueValue,omitempty"`

	// If true, the property won't be visible and can't be used in HubSpot.
	Hidden *bool `json:"hidden,omitempty"`

	// A human-readable property label that will be shown in HubSpot.
	Label string `json:"label"`

	// The internal property name, which must be used when referencing the property via the API.
	Name string `json:"name"`

	// A list of valid options for the property. This field is required for enumerated properties.
	Options *[]OptionInput `json:"options,omitempty"`

	// The data type of the property.
	Type PropertyCreateType `json:"type"`
}

// Controls how the property appears in HubSpot.
type PropertyCreateFieldType string

// The data type of the property.
type PropertyCreateType string

// An ID for a group of properties
type PropertyGroup struct {
	Archived bool `json:"archived"`

	// Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.
	DisplayOrder int32 `json:"displayOrder"`

	// A human-readable label that will be shown in HubSpot.
	Label string `json:"label"`

	// The internal property group name, which must be used when referencing the property group via the API.
	Name string `json:"name"`
}

// PropertyGroupCreate defines model for PropertyGroupCreate.
type PropertyGroupCreate struct {
	// Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.
	DisplayOrder *int32 `json:"displayOrder,omitempty"`

	// A human-readable label that will be shown in HubSpot.
	Label string `json:"label"`

	// The internal property group name, which must be used when referencing the property group via the API.
	Name string `json:"name"`
}

// PropertyGroupUpdate defines model for PropertyGroupUpdate.
type PropertyGroupUpdate struct {
	// Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.
	DisplayOrder *int32 `json:"displayOrder,omitempty"`

	// A human-readable label that will be shown in HubSpot.
	Label *string `json:"label,omitempty"`
}

// PropertyModificationMetadata defines model for PropertyModificationMetadata.
type PropertyModificationMetadata struct {
	Archivable         bool  `json:"archivable"`
	ReadOnlyDefinition bool  `json:"readOnlyDefinition"`
	ReadOnlyOptions    *bool `json:"readOnlyOptions,omitempty"`
	ReadOnlyValue      bool  `json:"readOnlyValue"`
}

// PropertyName defines model for PropertyName.
type PropertyName struct {
	// The name of the property to read or modify.
	Name string `json:"name"`
}

// PropertyUpdate defines model for PropertyUpdate.
type PropertyUpdate struct {
	// A description of the property that will be shown as help text in HubSpot.
	Description *string `json:"description,omitempty"`

	// Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the Property to be displayed after any positive values.
	DisplayOrder *int32 `json:"displayOrder,omitempty"`

	// Controls how the property appears in HubSpot.
	FieldType *PropertyUpdateFieldType `json:"fieldType,omitempty"`

	// Whether or not the property can be used in a HubSpot form.
	FormField *bool `json:"formField,omitempty"`

	// The name of the property group the property belongs to.
	GroupName *string `json:"groupName,omitempty"`

	// If true, the property won't be visible and can't be used in HubSpot.
	Hidden *bool `json:"hidden,omitempty"`

	// A human-readable property label that will be shown in HubSpot.
	Label *string `json:"label,omitempty"`

	// A list of valid options for the property.
	Options *[]OptionInput `json:"options,omitempty"`

	// The data type of the property.
	Type *PropertyUpdateType `json:"type,omitempty"`
}

// Controls how the property appears in HubSpot.
type PropertyUpdateFieldType string

// The data type of the property.
type PropertyUpdateType string

// StandardError defines model for StandardError.
type StandardError struct {
	Category    ErrorCategory           `json:"category"`
	Context     StandardError_Context   `json:"context"`
	Errors      []ErrorDetail           `json:"errors"`
	Id          *string                 `json:"id,omitempty"`
	Links       StandardError_Links     `json:"links"`
	Message     string                  `json:"message"`
	Status      string                  `json:"status"`
	SubCategory *map[string]interface{} `json:"subCategory,omitempty"`
}

// StandardError_Context defines model for StandardError.Context.
type StandardError_Context struct {
	AdditionalProperties map[string][]string `json:"-"`
}

// StandardError_Links defines model for StandardError.Links.
type StandardError_Links struct {
	AdditionalProperties map[string]string `json:"-"`
}

// GetAllObjectTypeParams defines parameters for GetAllObjectType.
type GetAllObjectTypeParams struct {
	// Whether to return only results that have been archived.
	Archived *bool `json:"archived,omitempty"`
}

// CreateObjectTypeJSONBody defines parameters for CreateObjectType.
type CreateObjectTypeJSONBody PropertyCreate

// ArchiveBatchJSONBody defines parameters for ArchiveBatch.
type ArchiveBatchJSONBody BatchInputPropertyName

// CreateBatchJSONBody defines parameters for CreateBatch.
type CreateBatchJSONBody BatchInputPropertyCreate

// ReadBatchJSONBody defines parameters for ReadBatch.
type ReadBatchJSONBody BatchReadInputPropertyName

// CreateGroupsJSONBody defines parameters for CreateGroups.
type CreateGroupsJSONBody PropertyGroupCreate

// UpdateGroupNameJSONBody defines parameters for UpdateGroupName.
type UpdateGroupNameJSONBody PropertyGroupUpdate

// GetByNamePropertyNameParams defines parameters for GetByNamePropertyName.
type GetByNamePropertyNameParams struct {
	// Whether to return only results that have been archived.
	Archived *bool `json:"archived,omitempty"`
}

// UpdatePropertyNameJSONBody defines parameters for UpdatePropertyName.
type UpdatePropertyNameJSONBody PropertyUpdate

// CreateObjectTypeJSONRequestBody defines body for CreateObjectType for application/json ContentType.
type CreateObjectTypeJSONRequestBody CreateObjectTypeJSONBody

// ArchiveBatchJSONRequestBody defines body for ArchiveBatch for application/json ContentType.
type ArchiveBatchJSONRequestBody ArchiveBatchJSONBody

// CreateBatchJSONRequestBody defines body for CreateBatch for application/json ContentType.
type CreateBatchJSONRequestBody CreateBatchJSONBody

// ReadBatchJSONRequestBody defines body for ReadBatch for application/json ContentType.
type ReadBatchJSONRequestBody ReadBatchJSONBody

// CreateGroupsJSONRequestBody defines body for CreateGroups for application/json ContentType.
type CreateGroupsJSONRequestBody CreateGroupsJSONBody

// UpdateGroupNameJSONRequestBody defines body for UpdateGroupName for application/json ContentType.
type UpdateGroupNameJSONRequestBody UpdateGroupNameJSONBody

// UpdatePropertyNameJSONRequestBody defines body for UpdatePropertyName for application/json ContentType.
type UpdatePropertyNameJSONRequestBody UpdatePropertyNameJSONBody

// Getter for additional properties for BatchResponseProperty_Links. Returns the specified
// element and whether it was found
func (a BatchResponseProperty_Links) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for BatchResponseProperty_Links
func (a *BatchResponseProperty_Links) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for BatchResponseProperty_Links to handle AdditionalProperties
func (a *BatchResponseProperty_Links) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for BatchResponseProperty_Links to handle AdditionalProperties
func (a BatchResponseProperty_Links) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Error_Context. Returns the specified
// element and whether it was found
func (a Error_Context) Get(fieldName string) (value []string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Error_Context
func (a *Error_Context) Set(fieldName string, value []string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string][]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Error_Context to handle AdditionalProperties
func (a *Error_Context) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string][]string)
		for fieldName, fieldBuf := range object {
			var fieldVal []string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Error_Context to handle AdditionalProperties
func (a Error_Context) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Error_Links. Returns the specified
// element and whether it was found
func (a Error_Links) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Error_Links
func (a *Error_Links) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Error_Links to handle AdditionalProperties
func (a *Error_Links) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Error_Links to handle AdditionalProperties
func (a Error_Links) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ErrorDetail_Context. Returns the specified
// element and whether it was found
func (a ErrorDetail_Context) Get(fieldName string) (value []string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ErrorDetail_Context
func (a *ErrorDetail_Context) Set(fieldName string, value []string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string][]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ErrorDetail_Context to handle AdditionalProperties
func (a *ErrorDetail_Context) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string][]string)
		for fieldName, fieldBuf := range object {
			var fieldVal []string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ErrorDetail_Context to handle AdditionalProperties
func (a ErrorDetail_Context) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for StandardError_Context. Returns the specified
// element and whether it was found
func (a StandardError_Context) Get(fieldName string) (value []string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for StandardError_Context
func (a *StandardError_Context) Set(fieldName string, value []string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string][]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for StandardError_Context to handle AdditionalProperties
func (a *StandardError_Context) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string][]string)
		for fieldName, fieldBuf := range object {
			var fieldVal []string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for StandardError_Context to handle AdditionalProperties
func (a StandardError_Context) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for StandardError_Links. Returns the specified
// element and whether it was found
func (a StandardError_Links) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for StandardError_Links
func (a *StandardError_Links) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for StandardError_Links to handle AdditionalProperties
func (a *StandardError_Links) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for StandardError_Links to handle AdditionalProperties
func (a StandardError_Links) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
