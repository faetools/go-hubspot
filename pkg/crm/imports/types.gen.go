// Package imports provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/faetools/devtool version (devel) DO NOT EDIT.
package imports

import (
	"encoding/json"
	"fmt"
	"time"
)

const (
	HapikeyScopes       = "hapikey.Scopes"
	Oauth2_legacyScopes = "oauth2_legacy.Scopes"
)

// Defines values for ActionResponseStatus.
const (
	ActionResponseStatusCANCELED ActionResponseStatus = "CANCELED"

	ActionResponseStatusCOMPLETE ActionResponseStatus = "COMPLETE"

	ActionResponseStatusPENDING ActionResponseStatus = "PENDING"

	ActionResponseStatusPROCESSING ActionResponseStatus = "PROCESSING"
)

// Defines values for PublicImportErrorErrorType.
const (
	PublicImportErrorErrorTypeAMBIGUOUSENUMERATIONOPTION PublicImportErrorErrorType = "AMBIGUOUS_ENUMERATION_OPTION"

	PublicImportErrorErrorTypeCOULDNOTFINDOWNER PublicImportErrorErrorType = "COULD_NOT_FIND_OWNER"

	PublicImportErrorErrorTypeCOULDNOTPARSEDATE PublicImportErrorErrorType = "COULD_NOT_PARSE_DATE"

	PublicImportErrorErrorTypeCOULDNOTPARSENUMBER PublicImportErrorErrorType = "COULD_NOT_PARSE_NUMBER"

	PublicImportErrorErrorTypeCOULDNOTPARSEROW PublicImportErrorErrorType = "COULD_NOT_PARSE_ROW"

	PublicImportErrorErrorTypeCOULDNOTPARSETERM PublicImportErrorErrorType = "COULD_NOT_PARSE_TERM"

	PublicImportErrorErrorTypeDUPLICATEALTERNATEID PublicImportErrorErrorType = "DUPLICATE_ALTERNATE_ID"

	PublicImportErrorErrorTypeDUPLICATEASSOCIATIONID PublicImportErrorErrorType = "DUPLICATE_ASSOCIATION_ID"

	PublicImportErrorErrorTypeDUPLICATEOBJECTID PublicImportErrorErrorType = "DUPLICATE_OBJECT_ID"

	PublicImportErrorErrorTypeDUPLICATEROWCONTENT PublicImportErrorErrorType = "DUPLICATE_ROW_CONTENT"

	PublicImportErrorErrorTypeDUPLICATEUNIQUEPROPERTYVALUE PublicImportErrorErrorType = "DUPLICATE_UNIQUE_PROPERTY_VALUE"

	PublicImportErrorErrorTypeFAILEDTOCREATEASSOCIATION PublicImportErrorErrorType = "FAILED_TO_CREATE_ASSOCIATION"

	PublicImportErrorErrorTypeFAILEDTOOPTOUTCONTACT PublicImportErrorErrorType = "FAILED_TO_OPT_OUT_CONTACT"

	PublicImportErrorErrorTypeFAILEDTOPROCESSOBJECTWITHEMPTYPROPERTYVALUES PublicImportErrorErrorType = "FAILED_TO_PROCESS_OBJECT_WITH_EMPTY_PROPERTY_VALUES"

	PublicImportErrorErrorTypeFAILEDVALIDATION PublicImportErrorErrorType = "FAILED_VALIDATION"

	PublicImportErrorErrorTypeFILENOTFOUND PublicImportErrorErrorType = "FILE_NOT_FOUND"

	PublicImportErrorErrorTypeGDPRBLACKLISTEDEMAIL PublicImportErrorErrorType = "GDPR_BLACKLISTED_EMAIL"

	PublicImportErrorErrorTypeINCORRECTNUMBEROFCOLUMNS PublicImportErrorErrorType = "INCORRECT_NUMBER_OF_COLUMNS"

	PublicImportErrorErrorTypeINVALIDALTERNATEID PublicImportErrorErrorType = "INVALID_ALTERNATE_ID"

	PublicImportErrorErrorTypeINVALIDASSOCIATIONIDENTIFIER PublicImportErrorErrorType = "INVALID_ASSOCIATION_IDENTIFIER"

	PublicImportErrorErrorTypeINVALIDCOLUMNCONFIGURATION PublicImportErrorErrorType = "INVALID_COLUMN_CONFIGURATION"

	PublicImportErrorErrorTypeINVALIDDOMAIN PublicImportErrorErrorType = "INVALID_DOMAIN"

	PublicImportErrorErrorTypeINVALIDEMAIL PublicImportErrorErrorType = "INVALID_EMAIL"

	PublicImportErrorErrorTypeINVALIDENUMERATIONOPTION PublicImportErrorErrorType = "INVALID_ENUMERATION_OPTION"

	PublicImportErrorErrorTypeINVALIDFILETYPE PublicImportErrorErrorType = "INVALID_FILE_TYPE"

	PublicImportErrorErrorTypeINVALIDNUMBERSIZE PublicImportErrorErrorType = "INVALID_NUMBER_SIZE"

	PublicImportErrorErrorTypeINVALIDOBJECTID PublicImportErrorErrorType = "INVALID_OBJECT_ID"

	PublicImportErrorErrorTypeINVALIDREQUIREDPROPERTY PublicImportErrorErrorType = "INVALID_REQUIRED_PROPERTY"

	PublicImportErrorErrorTypeINVALIDSHEETCOUNT PublicImportErrorErrorType = "INVALID_SHEET_COUNT"

	PublicImportErrorErrorTypeINVALIDSPREADSHEET PublicImportErrorErrorType = "INVALID_SPREADSHEET"

	PublicImportErrorErrorTypeLIMITEXCEEDED PublicImportErrorErrorType = "LIMIT_EXCEEDED"

	PublicImportErrorErrorTypeMULTIPLECOMPANIESWITHTHISDOMAIN PublicImportErrorErrorType = "MULTIPLE_COMPANIES_WITH_THIS_DOMAIN"

	PublicImportErrorErrorTypeMULTIPLEOWNERSFOUND PublicImportErrorErrorType = "MULTIPLE_OWNERS_FOUND"

	PublicImportErrorErrorTypeNOOBJECTIDFROMASSOCIATIONIDENTIFIER PublicImportErrorErrorType = "NO_OBJECT_ID_FROM_ASSOCIATION_IDENTIFIER"

	PublicImportErrorErrorTypeOUTSIDEVALIDTERMRANGE PublicImportErrorErrorType = "OUTSIDE_VALID_TERM_RANGE"

	PublicImportErrorErrorTypeOUTSIDEVALIDTIMERANGE PublicImportErrorErrorType = "OUTSIDE_VALID_TIME_RANGE"

	PublicImportErrorErrorTypePROPERTYDEFINITIONNOTFOUND PublicImportErrorErrorType = "PROPERTY_DEFINITION_NOT_FOUND"

	PublicImportErrorErrorTypePROPERTYVALUENOTFOUND PublicImportErrorErrorType = "PROPERTY_VALUE_NOT_FOUND"

	PublicImportErrorErrorTypeUNKNOWNBADREQUEST PublicImportErrorErrorType = "UNKNOWN_BAD_REQUEST"

	PublicImportErrorErrorTypeUNKNOWNERROR PublicImportErrorErrorType = "UNKNOWN_ERROR"
)

// Defines values for PublicImportErrorObjectType.
const (
	PublicImportErrorObjectTypeACCEPTANCETEST PublicImportErrorObjectType = "ACCEPTANCE_TEST"

	PublicImportErrorObjectTypeAD PublicImportErrorObjectType = "AD"

	PublicImportErrorObjectTypeADACCOUNT PublicImportErrorObjectType = "AD_ACCOUNT"

	PublicImportErrorObjectTypeADCAMPAIGN PublicImportErrorObjectType = "AD_CAMPAIGN"

	PublicImportErrorObjectTypeADGROUP PublicImportErrorObjectType = "AD_GROUP"

	PublicImportErrorObjectTypeAPPROVAL PublicImportErrorObjectType = "APPROVAL"

	PublicImportErrorObjectTypeAPPROVALSTEP PublicImportErrorObjectType = "APPROVAL_STEP"

	PublicImportErrorObjectTypeATTRIBUTION PublicImportErrorObjectType = "ATTRIBUTION"

	PublicImportErrorObjectTypeAUTOMATIONPLATFORMFLOW PublicImportErrorObjectType = "AUTOMATION_PLATFORM_FLOW"

	PublicImportErrorObjectTypeBETALERT PublicImportErrorObjectType = "BET_ALERT"

	PublicImportErrorObjectTypeBETDELIVERABLESERVICE PublicImportErrorObjectType = "BET_DELIVERABLE_SERVICE"

	PublicImportErrorObjectTypeBLOGPOST PublicImportErrorObjectType = "BLOG_POST"

	PublicImportErrorObjectTypeCALL PublicImportErrorObjectType = "CALL"

	PublicImportErrorObjectTypeCAMPAIGN PublicImportErrorObjectType = "CAMPAIGN"

	PublicImportErrorObjectTypeCHATFLOW PublicImportErrorObjectType = "CHATFLOW"

	PublicImportErrorObjectTypeCOMMUNICATION PublicImportErrorObjectType = "COMMUNICATION"

	PublicImportErrorObjectTypeCOMPANY PublicImportErrorObjectType = "COMPANY"

	PublicImportErrorObjectTypeCONTACT PublicImportErrorObjectType = "CONTACT"

	PublicImportErrorObjectTypeCONTACTCREATEATTRIBUTION PublicImportErrorObjectType = "CONTACT_CREATE_ATTRIBUTION"

	PublicImportErrorObjectTypeCONTENT PublicImportErrorObjectType = "CONTENT"

	PublicImportErrorObjectTypeCONVERSATION PublicImportErrorObjectType = "CONVERSATION"

	PublicImportErrorObjectTypeCONVERSATIONINBOX PublicImportErrorObjectType = "CONVERSATION_INBOX"

	PublicImportErrorObjectTypeCONVERSATIONSESSION PublicImportErrorObjectType = "CONVERSATION_SESSION"

	PublicImportErrorObjectTypeCTA PublicImportErrorObjectType = "CTA"

	PublicImportErrorObjectTypeCTAVARIANT PublicImportErrorObjectType = "CTA_VARIANT"

	PublicImportErrorObjectTypeDEAL PublicImportErrorObjectType = "DEAL"

	PublicImportErrorObjectTypeDEALCREATEATTRIBUTION PublicImportErrorObjectType = "DEAL_CREATE_ATTRIBUTION"

	PublicImportErrorObjectTypeDEALREGISTRATION PublicImportErrorObjectType = "DEAL_REGISTRATION"

	PublicImportErrorObjectTypeDEALSPLIT PublicImportErrorObjectType = "DEAL_SPLIT"

	PublicImportErrorObjectTypeEMAIL PublicImportErrorObjectType = "EMAIL"

	PublicImportErrorObjectTypeENGAGEMENT PublicImportErrorObjectType = "ENGAGEMENT"

	PublicImportErrorObjectTypeEXPORT PublicImportErrorObjectType = "EXPORT"

	PublicImportErrorObjectTypeFEEDBACKSUBMISSION PublicImportErrorObjectType = "FEEDBACK_SUBMISSION"

	PublicImportErrorObjectTypeFILEMANAGERFILE PublicImportErrorObjectType = "FILE_MANAGER_FILE"

	PublicImportErrorObjectTypeFILEMANAGERFOLDER PublicImportErrorObjectType = "FILE_MANAGER_FOLDER"

	PublicImportErrorObjectTypeFORECAST PublicImportErrorObjectType = "FORECAST"

	PublicImportErrorObjectTypeFORM PublicImportErrorObjectType = "FORM"

	PublicImportErrorObjectTypeFORMSUBMISSIONINBOUNDDB PublicImportErrorObjectType = "FORM_SUBMISSION_INBOUNDDB"

	PublicImportErrorObjectTypeGOALTARGET PublicImportErrorObjectType = "GOAL_TARGET"

	PublicImportErrorObjectTypeGOALTARGETGROUP PublicImportErrorObjectType = "GOAL_TARGET_GROUP"

	PublicImportErrorObjectTypeHUB PublicImportErrorObjectType = "HUB"

	PublicImportErrorObjectTypeIMPORT PublicImportErrorObjectType = "IMPORT"

	PublicImportErrorObjectTypeINVOICE PublicImportErrorObjectType = "INVOICE"

	PublicImportErrorObjectTypeKEYWORD PublicImportErrorObjectType = "KEYWORD"

	PublicImportErrorObjectTypeLANDINGPAGE PublicImportErrorObjectType = "LANDING_PAGE"

	PublicImportErrorObjectTypeLINEITEM PublicImportErrorObjectType = "LINE_ITEM"

	PublicImportErrorObjectTypeMARKETINGEMAIL PublicImportErrorObjectType = "MARKETING_EMAIL"

	PublicImportErrorObjectTypeMARKETINGEVENT PublicImportErrorObjectType = "MARKETING_EVENT"

	PublicImportErrorObjectTypeMEDIABRIDGE PublicImportErrorObjectType = "MEDIA_BRIDGE"

	PublicImportErrorObjectTypeMEETINGEVENT PublicImportErrorObjectType = "MEETING_EVENT"

	PublicImportErrorObjectTypeNOTE PublicImportErrorObjectType = "NOTE"

	PublicImportErrorObjectTypeOBJECTLIST PublicImportErrorObjectType = "OBJECT_LIST"

	PublicImportErrorObjectTypeOWNER PublicImportErrorObjectType = "OWNER"

	PublicImportErrorObjectTypePORTAL PublicImportErrorObjectType = "PORTAL"

	PublicImportErrorObjectTypePORTALOBJECTSYNCMESSAGE PublicImportErrorObjectType = "PORTAL_OBJECT_SYNC_MESSAGE"

	PublicImportErrorObjectTypePRODUCT PublicImportErrorObjectType = "PRODUCT"

	PublicImportErrorObjectTypePRODUCTORFOLDER PublicImportErrorObjectType = "PRODUCT_OR_FOLDER"

	PublicImportErrorObjectTypePUBLISHINGTASK PublicImportErrorObjectType = "PUBLISHING_TASK"

	PublicImportErrorObjectTypeQUOTA PublicImportErrorObjectType = "QUOTA"

	PublicImportErrorObjectTypeQUOTE PublicImportErrorObjectType = "QUOTE"

	PublicImportErrorObjectTypeQUOTEFIELD PublicImportErrorObjectType = "QUOTE_FIELD"

	PublicImportErrorObjectTypeQUOTEMODULE PublicImportErrorObjectType = "QUOTE_MODULE"

	PublicImportErrorObjectTypeQUOTEMODULEFIELD PublicImportErrorObjectType = "QUOTE_MODULE_FIELD"

	PublicImportErrorObjectTypeQUOTETEMPLATE PublicImportErrorObjectType = "QUOTE_TEMPLATE"

	PublicImportErrorObjectTypeRESTORABLECRMOBJECT PublicImportErrorObjectType = "RESTORABLE_CRM_OBJECT"

	PublicImportErrorObjectTypeSALESFORCESYNCERROR PublicImportErrorObjectType = "SALESFORCE_SYNC_ERROR"

	PublicImportErrorObjectTypeSEQUENCE PublicImportErrorObjectType = "SEQUENCE"

	PublicImportErrorObjectTypeSEQUENCEENROLLMENT PublicImportErrorObjectType = "SEQUENCE_ENROLLMENT"

	PublicImportErrorObjectTypeSEQUENCESTEP PublicImportErrorObjectType = "SEQUENCE_STEP"

	PublicImportErrorObjectTypeSEQUENCESTEPENROLLMENT PublicImportErrorObjectType = "SEQUENCE_STEP_ENROLLMENT"

	PublicImportErrorObjectTypeSITEPAGE PublicImportErrorObjectType = "SITE_PAGE"

	PublicImportErrorObjectTypeSNIPPET PublicImportErrorObjectType = "SNIPPET"

	PublicImportErrorObjectTypeSOCIALBROADCAST PublicImportErrorObjectType = "SOCIAL_BROADCAST"

	PublicImportErrorObjectTypeSOCIALCHANNEL PublicImportErrorObjectType = "SOCIAL_CHANNEL"

	PublicImportErrorObjectTypeSOCIALPOST PublicImportErrorObjectType = "SOCIAL_POST"

	PublicImportErrorObjectTypeSUBSCRIPTION PublicImportErrorObjectType = "SUBSCRIPTION"

	PublicImportErrorObjectTypeTASK PublicImportErrorObjectType = "TASK"

	PublicImportErrorObjectTypeTASKTEMPLATE PublicImportErrorObjectType = "TASK_TEMPLATE"

	PublicImportErrorObjectTypeTEMPLATE PublicImportErrorObjectType = "TEMPLATE"

	PublicImportErrorObjectTypeTICKET PublicImportErrorObjectType = "TICKET"

	PublicImportErrorObjectTypeUNKNOWN PublicImportErrorObjectType = "UNKNOWN"

	PublicImportErrorObjectTypeUNSUBSCRIBE PublicImportErrorObjectType = "UNSUBSCRIBE"
)

// Defines values for PublicImportResponseState.
const (
	PublicImportResponseStateCANCELED PublicImportResponseState = "CANCELED"

	PublicImportResponseStateDEFERRED PublicImportResponseState = "DEFERRED"

	PublicImportResponseStateDONE PublicImportResponseState = "DONE"

	PublicImportResponseStateFAILED PublicImportResponseState = "FAILED"

	PublicImportResponseStatePROCESSING PublicImportResponseState = "PROCESSING"

	PublicImportResponseStateSTARTED PublicImportResponseState = "STARTED"
)

// ActionResponse defines model for ActionResponse.
type ActionResponse struct {
	CompletedAt time.Time             `json:"completedAt"`
	Links       *ActionResponse_Links `json:"links,omitempty"`
	RequestedAt *time.Time            `json:"requestedAt,omitempty"`
	StartedAt   time.Time             `json:"startedAt"`
	Status      ActionResponseStatus  `json:"status"`
}

// ActionResponse_Links defines model for ActionResponse.Links.
type ActionResponse_Links struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ActionResponseStatus defines model for ActionResponse.Status.
type ActionResponseStatus string

// CollectionResponsePublicImportErrorForwardPaging defines model for CollectionResponsePublicImportErrorForwardPaging.
type CollectionResponsePublicImportErrorForwardPaging struct {
	Paging  *ForwardPaging      `json:"paging,omitempty"`
	Results []PublicImportError `json:"results"`
}

// CollectionResponsePublicImportResponse defines model for CollectionResponsePublicImportResponse.
type CollectionResponsePublicImportResponse struct {
	Paging  *Paging                `json:"paging,omitempty"`
	Results []PublicImportResponse `json:"results"`
}

// Error defines model for Error.
type Error struct {
	// The error category
	Category string `json:"category"`

	// Context about the error condition
	Context *Error_Context `json:"context,omitempty"`

	// A unique identifier for the request. Include this value with any error reports or support tickets
	CorrelationId string `json:"correlationId"`

	// further information about the error
	Errors *[]ErrorDetail `json:"errors,omitempty"`

	// A map of link names to associated URIs containing documentation about the error or recommended remediation steps
	Links *Error_Links `json:"links,omitempty"`

	// A human readable message describing the error along with remediation steps where appropriate
	Message string `json:"message"`

	// A specific category that contains more specific detail about the error
	SubCategory *string `json:"subCategory,omitempty"`
}

// Context about the error condition
type Error_Context struct {
	AdditionalProperties map[string][]string `json:"-"`
}

// A map of link names to associated URIs containing documentation about the error or recommended remediation steps
type Error_Links struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ErrorDetail defines model for ErrorDetail.
type ErrorDetail struct {
	// The status code associated with the error detail
	Code *string `json:"code,omitempty"`

	// Context about the error condition
	Context *ErrorDetail_Context `json:"context,omitempty"`

	// The name of the field or parameter in which the error was found.
	In *string `json:"in,omitempty"`

	// A human readable message describing the error along with remediation steps where appropriate
	Message string `json:"message"`

	// A specific category that contains more specific detail about the error
	SubCategory *string `json:"subCategory,omitempty"`
}

// Context about the error condition
type ErrorDetail_Context struct {
	AdditionalProperties map[string][]string `json:"-"`
}

// ForwardPaging defines model for ForwardPaging.
type ForwardPaging struct {
	Next *NextPage `json:"next,omitempty"`
}

// ImportRowCore defines model for ImportRowCore.
type ImportRowCore struct {
	FileId     int32   `json:"fileId"`
	LineNumber int32   `json:"lineNumber"`
	PageName   *string `json:"pageName,omitempty"`
}

// NextPage defines model for NextPage.
type NextPage struct {
	After string  `json:"after"`
	Link  *string `json:"link,omitempty"`
}

// Paging defines model for Paging.
type Paging struct {
	Next *NextPage     `json:"next,omitempty"`
	Prev *PreviousPage `json:"prev,omitempty"`
}

// PreviousPage defines model for PreviousPage.
type PreviousPage struct {
	Before string  `json:"before"`
	Link   *string `json:"link,omitempty"`
}

// PublicImportError defines model for PublicImportError.
type PublicImportError struct {
	CreatedAt         int32                        `json:"createdAt"`
	ErrorType         PublicImportErrorErrorType   `json:"errorType"`
	ExtraContext      *string                      `json:"extraContext,omitempty"`
	Id                string                       `json:"id"`
	InvalidValue      *string                      `json:"invalidValue,omitempty"`
	KnownColumnNumber int32                        `json:"knownColumnNumber"`
	ObjectType        *PublicImportErrorObjectType `json:"objectType,omitempty"`
	ObjectTypeId      *string                      `json:"objectTypeId,omitempty"`
	SourceData        ImportRowCore                `json:"sourceData"`
}

// PublicImportErrorErrorType defines model for PublicImportError.ErrorType.
type PublicImportErrorErrorType string

// PublicImportErrorObjectType defines model for PublicImportError.ObjectType.
type PublicImportErrorObjectType string

// An object detailing a summary of the import record outputs
type PublicImportMetadata struct {
	// Summarized outcomes of each row a developer attempted to import into HubSpot.
	Counters PublicImportMetadata_Counters `json:"counters"`

	// The IDs of files uploaded in the File Manager API.
	FileIds []string `json:"fileIds"`

	// The lists containing the imported objects.
	ObjectLists []PublicObjectListRecord `json:"objectLists"`
}

// Summarized outcomes of each row a developer attempted to import into HubSpot.
type PublicImportMetadata_Counters struct {
	AdditionalProperties map[string]int32 `json:"-"`
}

// A current summary of the import, whether complete or not.
type PublicImportResponse struct {
	CreatedAt         time.Time               `json:"createdAt"`
	Id                string                  `json:"id"`
	ImportName        *string                 `json:"importName,omitempty"`
	ImportRequestJson *map[string]interface{} `json:"importRequestJson,omitempty"`

	// An object detailing a summary of the import record outputs
	Metadata PublicImportMetadata `json:"metadata"`

	// Whether or not the import is a list of people disqualified from receiving emails.
	OptOutImport bool `json:"optOutImport"`

	// The status of the import.
	State     PublicImportResponseState `json:"state"`
	UpdatedAt time.Time                 `json:"updatedAt"`
}

// The status of the import.
type PublicImportResponseState string

// A summary detailing which list contains the imported objects.
type PublicObjectListRecord struct {
	// The ID of the list containing the imported objects.
	ListId string `json:"listId"`

	// The type of object contained in the list.
	ObjectType string `json:"objectType"`
}

// GetPageParams defines parameters for GetPage.
type GetPageParams struct {
	// The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.
	After  *string `json:"after,omitempty"`
	Before *string `json:"before,omitempty"`

	// The maximum number of results to display per page.
	Limit *int32 `json:"limit,omitempty"`
}

// GetErrorsParams defines parameters for GetErrors.
type GetErrorsParams struct {
	// The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.
	After *string `json:"after,omitempty"`

	// The maximum number of results to display per page.
	Limit *int32 `json:"limit,omitempty"`
}

// Getter for additional properties for ActionResponse_Links. Returns the specified
// element and whether it was found
func (a ActionResponse_Links) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ActionResponse_Links
func (a *ActionResponse_Links) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ActionResponse_Links to handle AdditionalProperties
func (a *ActionResponse_Links) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ActionResponse_Links to handle AdditionalProperties
func (a ActionResponse_Links) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Error_Context. Returns the specified
// element and whether it was found
func (a Error_Context) Get(fieldName string) (value []string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Error_Context
func (a *Error_Context) Set(fieldName string, value []string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string][]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Error_Context to handle AdditionalProperties
func (a *Error_Context) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string][]string)
		for fieldName, fieldBuf := range object {
			var fieldVal []string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Error_Context to handle AdditionalProperties
func (a Error_Context) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Error_Links. Returns the specified
// element and whether it was found
func (a Error_Links) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Error_Links
func (a *Error_Links) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Error_Links to handle AdditionalProperties
func (a *Error_Links) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Error_Links to handle AdditionalProperties
func (a Error_Links) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ErrorDetail_Context. Returns the specified
// element and whether it was found
func (a ErrorDetail_Context) Get(fieldName string) (value []string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ErrorDetail_Context
func (a *ErrorDetail_Context) Set(fieldName string, value []string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string][]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ErrorDetail_Context to handle AdditionalProperties
func (a *ErrorDetail_Context) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string][]string)
		for fieldName, fieldBuf := range object {
			var fieldVal []string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ErrorDetail_Context to handle AdditionalProperties
func (a ErrorDetail_Context) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PublicImportMetadata_Counters. Returns the specified
// element and whether it was found
func (a PublicImportMetadata_Counters) Get(fieldName string) (value int32, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PublicImportMetadata_Counters
func (a *PublicImportMetadata_Counters) Set(fieldName string, value int32) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]int32)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PublicImportMetadata_Counters to handle AdditionalProperties
func (a *PublicImportMetadata_Counters) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]int32)
		for fieldName, fieldBuf := range object {
			var fieldVal int32
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PublicImportMetadata_Counters to handle AdditionalProperties
func (a PublicImportMetadata_Counters) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
