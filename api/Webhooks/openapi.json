{
  "openapi": "3.0.1",
  "info": {
    "title": "Webhooks API",
    "description": "Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.",
    "version": "v3"
  },
  "servers": [
    {
      "url": "https://api.hubapi.com/"
    }
  ],
  "tags": [
    {
      "name": "Settings",
      "description": "Operations to manage app-level webhook settings."
    },
    {
      "name": "Subscriptions",
      "description": "Operations to manage event subscriptions."
    }
  ],
  "paths": {
    "/webhooks/v3/{appId}/settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get webhook settings",
        "description": "Returns the current state of webhook settings for the given app. These settings include the app's configured target URL and max concurrency limit.",
        "operationId": "get-/webhooks/v3/{appId}/settings_getAll",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "The ID of the target app.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                },
                "example": {
                  "createdAt": "2020-01-24T16:27:59Z",
                  "throttling": {
                    "period": "SECONDLY",
                    "maxConcurrentRequests": 10
                  },
                  "targetUrl": "https://www.example.com/hubspot/target",
                  "updatedAt": "2020-01-24T16:32:43Z"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "hapikey": []
          }
        ]
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Configure webhook settings",
        "description": "Used to set the webhook target URL and max concurrency limit for the given app.",
        "operationId": "put-/webhooks/v3/{appId}/settings_configure",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "The ID of the target app.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Settings state to create new with or replace existing settings with.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsChangeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                },
                "example": {
                  "createdAt": "2020-01-24T16:27:59Z",
                  "throttling": {
                    "period": "SECONDLY",
                    "maxConcurrentRequests": 10
                  },
                  "targetUrl": "https://www.example.com/hubspot/target",
                  "updatedAt": "2020-01-24T16:32:43Z"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "hapikey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Settings"
        ],
        "summary": "Clear webhook settings",
        "description": "Resets webhook target URL to empty, and max concurrency limit to `0` for the given app. This will effectively pause all webhook subscriptions until new settings are provided.",
        "operationId": "delete-/webhooks/v3/{appId}/settings_clear",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "The ID of the target app.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "hapikey": []
          }
        ]
      }
    },
    "/webhooks/v3/{appId}/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get subscription details",
        "description": "Returns full details for all existing subscriptions for the given app.",
        "operationId": "get-/webhooks/v3/{appId}/subscriptions_getAll",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "The ID of the target app.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionListResponse"
                },
                "example": {
                  "results": [
                    {
                      "id": "12",
                      "createdAt": "2019-10-30T03:30:17.883Z",
                      "updatedAt": "2019-11-30T03:30:17.883Z",
                      "eventType": "contact.propertyChange",
                      "propertyName": "email",
                      "active": true
                    },
                    {
                      "id": "13",
                      "createdAt": "2019-10-30T03:30:17.883Z",
                      "updatedAt": "2019-11-30T03:30:17.883Z",
                      "eventType": "deal.creation",
                      "active": true
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "hapikey": []
          }
        ]
      },
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Subscribe to an event",
        "description": "Creates a new webhook subscription for the given app. Each subscription in an app must be unique.",
        "operationId": "post-/webhooks/v3/{appId}/subscriptions_create",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "The ID of the target app.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Details about the new subscription.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                },
                "example": {
                  "createdAt": "2019-10-30T03:30:17.883Z",
                  "propertyName": "email",
                  "active": true,
                  "id": "12",
                  "eventType": "contact.propertyChange",
                  "updatedAt": "2019-11-30T03:30:17.883Z"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "hapikey": []
          }
        ]
      }
    },
    "/webhooks/v3/{appId}/subscriptions/batch/update": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Batch update subscriptions",
        "description": "Activates or deactivates target app subscriptions.",
        "operationId": "post-/webhooks/v3/{appId}/subscriptions/batch/update_updateBatch",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "The app ID of the target app.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Updated details for the specified subscriptions.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputSubscriptionBatchUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseSubscriptionResponse"
                },
                "example": {
                  "completedAt": "2020-04-17T02:19:26.283Z",
                  "startedAt": "2020-04-17T02:19:26.256Z",
                  "results": [
                    {
                      "id": "1234",
                      "createdAt": "2019-06-06T16:56:16.652Z",
                      "updatedAt": "2019-08-06T16:56:16.652Z",
                      "eventType": "contact.propertyChange",
                      "propertyName": "firstname",
                      "active": true
                    },
                    {
                      "id": "4567",
                      "createdAt": "2019-06-06T16:56:16.652Z",
                      "updatedAt": "2019-08-06T16:56:16.652Z",
                      "eventType": "contact.create",
                      "active": false
                    }
                  ],
                  "status": "COMPLETE"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseSubscriptionResponseWithErrors"
                },
                "example": {
                  "completedAt": "2020-04-17T02:19:26.283Z",
                  "numErrors": 1,
                  "startedAt": "2020-04-17T02:19:26.256Z",
                  "results": [
                    {
                      "id": "1234",
                      "createdAt": "2019-06-06T16:56:16.652Z",
                      "updatedAt": "2019-08-06T16:56:16.652Z",
                      "eventType": "contact.propertyChange",
                      "propertyName": "firstname",
                      "active": true
                    }
                  ],
                  "errors": [
                    {
                      "status": "error",
                      "category": "SUBSCRIPTION_ID_NOT_FOUND",
                      "subCategory": "SubscriptionErrors.SUBSCRIPTION_IDS_NOT_FOUND",
                      "message": "Failed to find subscriptions by id `4567`. Try again using a different subscriptionId.",
                      "context": {
                        "subscriptionIds": [
                          "4567"
                        ]
                      }
                    }
                  ],
                  "status": "COMPLETE"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "hapikey": []
          }
        ]
      }
    },
    "/webhooks/v3/{appId}/subscriptions/{subscriptionId}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get subscription",
        "description": "Returns details about a subscription.",
        "operationId": "get-/webhooks/v3/{appId}/subscriptions/{subscriptionId}_getById",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "The ID of the target app.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                },
                "example": {
                  "createdAt": "2019-10-30T03:30:17.883Z",
                  "propertyName": "email",
                  "active": true,
                  "id": "12",
                  "eventType": "contact.propertyChange",
                  "updatedAt": "2019-11-30T03:30:17.883Z"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "hapikey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Delete a subscription",
        "description": "Permanently deletes a subscription. This cannot be undone.",
        "operationId": "delete-/webhooks/v3/{appId}/subscriptions/{subscriptionId}_archive",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of subscription to delete.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "The ID of the target app.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "hapikey": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Update a subscription",
        "description": "Updates the details for an existing subscription.",
        "operationId": "patch-/webhooks/v3/{appId}/subscriptions/{subscriptionId}_update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the subscription to update.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "The ID of the target app.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Updated details for the subscription.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                },
                "example": {
                  "createdAt": "2019-10-30T03:30:17.883Z",
                  "propertyName": "email",
                  "active": true,
                  "id": "12",
                  "eventType": "contact.propertyChange",
                  "updatedAt": "2019-11-30T03:30:17.883Z"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "hapikey": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BatchInputSubscriptionBatchUpdateRequest": {
        "required": [
          "inputs"
        ],
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionBatchUpdateRequest"
            }
          }
        }
      },
      "BatchResponseSubscriptionResponse": {
        "required": [
          "completedAt",
          "results",
          "startedAt",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "PROCESSING",
              "CANCELED",
              "COMPLETE"
            ]
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionResponse"
            }
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BatchResponseSubscriptionResponseWithErrors": {
        "required": [
          "completedAt",
          "results",
          "startedAt",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "PROCESSING",
              "CANCELED",
              "COMPLETE"
            ]
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionResponse"
            }
          },
          "numErrors": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StandardError"
            }
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Error": {
        "required": [
          "category",
          "correlationId",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human readable message describing the error along with remediation steps where appropriate",
            "example": "An error occurred"
          },
          "correlationId": {
            "type": "string",
            "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format": "uuid",
            "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "category": {
            "type": "string",
            "description": "The error category"
          },
          "subCategory": {
            "type": "string",
            "description": "A specific category that contains more specific detail about the error"
          },
          "errors": {
            "type": "array",
            "description": "further information about the error",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            }
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Context about the error condition",
            "example": {
              "invalidPropertyName": [
                "propertyValue"
              ],
              "missingScopes": [
                "scope1",
                "scope2"
              ]
            }
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps"
          }
        },
        "example": {
          "message": "Invalid input (details will vary based on the error)",
          "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category": "VALIDATION_ERROR",
          "links": {
            "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "ErrorCategory": {
        "required": [
          "httpStatus",
          "name"
        ],
        "type": "object",
        "properties": {
          "httpStatus": {
            "type": "string",
            "enum": [
              "CONTINUE",
              "SWITCHING_PROTOCOLS",
              "PROCESSING",
              "OK",
              "CREATED",
              "ACCEPTED",
              "NON_AUTHORITATIVE_INFORMATION",
              "NO_CONTENT",
              "RESET_CONTENT",
              "PARTIAL_CONTENT",
              "MULTI_STATUS",
              "ALREADY_REPORTED",
              "IM_USED",
              "MULTIPLE_CHOICES",
              "MOVED_PERMANENTLY",
              "FOUND",
              "SEE_OTHER",
              "NOT_MODIFIED",
              "USE_PROXY",
              "TEMPORARY_REDIRECT",
              "PERMANENT_REDIRECT",
              "BAD_REQUEST",
              "UNAUTHORIZED",
              "PAYMENT_REQUIRED",
              "FORBIDDEN",
              "NOT_FOUND",
              "METHOD_NOT_ALLOWED",
              "NOT_ACCEPTABLE",
              "PROXY_AUTHENTICATION_REQUIRED",
              "REQUEST_TIMEOUT",
              "CONFLICT",
              "GONE",
              "LENGTH_REQUIRED",
              "PRECONDITION_FAILED",
              "REQUEST_ENTITY_TOO_LARGE",
              "REQUEST_URI_TOO_LONG",
              "UNSUPPORTED_MEDIA_TYPE",
              "REQUESTED_RANGE_NOT_SATISFIABLE",
              "EXPECTATION_FAILED",
              "IM_A_TEAPOT",
              "MISDIRECTED_REQUEST",
              "UNPROCESSABLE_ENTITY",
              "LOCKED",
              "FAILED_DEPENDENCY",
              "UPGRADE_REQUIRED",
              "PRECONDITION_REQUIRED",
              "TOO_MANY_REQUESTS",
              "REQUEST_HEADERS_FIELDS_TOO_LARGE",
              "INTERNAL_STALE_SERVICE_DISCOVERY",
              "UNAVAILABLE_FOR_LEGAL_REASONS",
              "INTERNAL_SERVER_ERROR",
              "NOT_IMPLEMENTED",
              "BAD_GATEWAY",
              "SERVICE_UNAVAILABLE",
              "GATEWAY_TIMEOUT",
              "HTTP_VERSION_NOT_SUPPORTED",
              "VARIANT_ALSO_NEGOTIATES",
              "INSUFFICIENT_STORAGE",
              "LOOP_DETECTED",
              "NOT_EXTENDED",
              "NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ErrorDetail": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human readable message describing the error along with remediation steps where appropriate"
          },
          "in": {
            "type": "string",
            "description": "The name of the field or parameter in which the error was found."
          },
          "code": {
            "type": "string",
            "description": "The status code associated with the error detail"
          },
          "subCategory": {
            "type": "string",
            "description": "A specific category that contains more specific detail about the error"
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Context about the error condition",
            "example": {
              "missingScopes": [
                "scope1",
                "scope2"
              ]
            }
          }
        }
      },
      "SettingsChangeRequest": {
        "required": [
          "targetUrl",
          "throttling"
        ],
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "description": "A publicly available URL for Hubspot to call where event payloads will be delivered. See [link-so-some-doc](#) for details about the format of these event payloads."
          },
          "throttling": {
            "$ref": "#/components/schemas/ThrottlingSettings"
          }
        },
        "description": "New or updated webhook settings for an app.",
        "example": {
          "throttling": {
            "period": "SECONDLY",
            "maxConcurrentRequests": 10
          },
          "targetUrl": "https://www.example.com/hubspot/target"
        }
      },
      "SettingsResponse": {
        "required": [
          "createdAt",
          "targetUrl",
          "throttling"
        ],
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "description": "A publicly available URL for Hubspot to call where event payloads will be delivered. See [link-so-some-doc](#) for details about the format of these event payloads."
          },
          "throttling": {
            "$ref": "#/components/schemas/ThrottlingSettings"
          },
          "createdAt": {
            "type": "string",
            "description": "When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "When this subscription was last updated. Formatted as milliseconds from the [Unix epoch](#).",
            "format": "date-time"
          }
        },
        "description": "Webhook settings for an app.",
        "example": {
          "createdAt": "2020-01-24T16:27:59Z",
          "throttling": {
            "period": "SECONDLY",
            "maxConcurrentRequests": 10
          },
          "targetUrl": "https://www.example.com/hubspot/target",
          "updatedAt": "2020-01-24T16:32:43Z"
        }
      },
      "StandardError": {
        "required": [
          "category",
          "context",
          "errors",
          "links",
          "message",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/ErrorCategory"
          },
          "subCategory": {
            "type": "object",
            "properties": {}
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            }
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "SubscriptionBatchUpdateRequest": {
        "required": [
          "active",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "SubscriptionCreateRequest": {
        "required": [
          "eventType"
        ],
        "type": "object",
        "properties": {
          "eventType": {
            "type": "string",
            "description": "Type of event to listen for. Can be one of `create`, `delete`, `deletedForPrivacy`, or `propertyChange`.",
            "enum": [
              "contact.propertyChange",
              "company.propertyChange",
              "deal.propertyChange",
              "contact.creation",
              "contact.deletion",
              "contact.privacyDeletion",
              "company.creation",
              "company.deletion",
              "deal.creation",
              "deal.deletion"
            ]
          },
          "propertyName": {
            "type": "string",
            "description": "The internal name of the property to monitor for changes. Only applies when `eventType` is `propertyChange`.",
            "example": "firstname"
          },
          "active": {
            "type": "boolean",
            "description": "Determines if the subscription is active or paused. Defaults to false.",
            "default": false
          }
        },
        "description": "New webhook settings for an app.",
        "example": {
          "propertyName": "email",
          "active": true,
          "eventType": "contact.propertyChange"
        }
      },
      "SubscriptionListResponse": {
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "description": "List of event subscriptions for your app",
            "items": {
              "$ref": "#/components/schemas/SubscriptionResponse"
            }
          }
        },
        "description": "List of event subscriptions for your app"
      },
      "SubscriptionPatchRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Determines if the subscription is active or paused."
          }
        },
        "description": "Updated details for the subscription.",
        "example": {
          "active": true
        }
      },
      "SubscriptionResponse": {
        "required": [
          "active",
          "createdAt",
          "eventType",
          "id"
        ],
        "type": "object",
        "properties": {
          "eventType": {
            "type": "string",
            "description": "Type of event to listen for. Can be one of `create`, `delete`, `deletedForPrivacy`, or `propertyChange`.",
            "enum": [
              "contact.propertyChange",
              "company.propertyChange",
              "deal.propertyChange",
              "contact.creation",
              "contact.deletion",
              "contact.privacyDeletion",
              "company.creation",
              "company.deletion",
              "deal.creation",
              "deal.deletion"
            ]
          },
          "propertyName": {
            "type": "string",
            "description": "The internal name of the property being monitored for changes. Only applies when `eventType` is `propertyChange`."
          },
          "active": {
            "type": "boolean",
            "description": "Determines if the subscription is active or paused."
          },
          "id": {
            "type": "string",
            "description": "The unique ID of the subscription."
          },
          "createdAt": {
            "type": "string",
            "description": "When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "When this subscription was last updated. Formatted as milliseconds from the [Unix epoch](#).",
            "format": "date-time"
          }
        },
        "description": "Complete details for an event subscription."
      },
      "ThrottlingSettings": {
        "required": [
          "maxConcurrentRequests",
          "period"
        ],
        "type": "object",
        "properties": {
          "maxConcurrentRequests": {
            "type": "integer",
            "description": "The maximum number of HTTP requests HubSpot will attempt to make to your app in a given time frame determined by `period`.",
            "format": "int32"
          },
          "period": {
            "type": "string",
            "description": "Time scale for this setting. Can be either `SECONDLY` (per second) or `ROLLING_MINUTE` (per minute).",
            "enum": [
              "SECONDLY",
              "ROLLING_MINUTE"
            ]
          }
        },
        "description": "Configuration details for webhook throttling."
      }
    },
    "responses": {
      "Error": {
        "description": "An error occurred.",
        "content": {
          "*/*": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "hapikey": {
        "type": "apiKey",
        "name": "hapikey",
        "in": "query"
      }
    }
  },
  "x-hubspot-available-client-libraries": [
    "PHP",
    "Node",
    "Python",
    "Ruby"
  ]
}
